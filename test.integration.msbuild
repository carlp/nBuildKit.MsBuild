<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="11.0"
         DefaultTargets="nBuildKit_Test_Integration_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsTestPrepareWorkspace>true</ExistsTestPrepareWorkspace>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props') AND '$(ExistsSharedImportTestSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild') AND '$(ExistsExtensionsGetSemanticVersionFromFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild') AND '$(ExistsExtensionsNuGetInstall)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\InvokePesterOnFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\InvokePesterOnFile.msbuild') AND '$(ExistsExtensionsInvokePesterOnFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolDirectory.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolDirectory.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolDirectory)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_Test_Integration_Run"
            DependsOnTargets="_nBuildKit_Test_Integration_DisplayInfo">
        <CallTarget Targets="nBuildKit_Test_Integration_Run" />
    </Target>

    <Target Name="_nBuildKit_Test_Integration_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Configuration values:"
                 Importance="low"/>
        <Message Text="ShouldClean:             $(ShouldClean)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the build output is located at:           $(DirBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the deliverables is located at:           $(DirBuildDeploy)"
                 Importance="low"/>
        <Message Text="The directory containing the build logs is located at:             $(DirBuildLogs)"
                 Importance="low"/>
        <Message Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)"
                 Importance="low"/>
        <Message Text="The directory containing the C# test files is located at:          $(DirTestLocal)"
                 Importance="low"/>
        <Message Text="The directory containing the NuGet packages is located at:         $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Test_Integration_DisplayInfo"
            DependsOnTargets="_nBuildKit_Test_Integration_DebugLog">
        <Message Text="Testing C# packages ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Test_Integration_GetToolPaths">
        <NuGetInstall NuGetPath="$(ToolsExternalNuGetPath)"
                      PackageName="Pester"
                      PackageVersion="$(ToolsExternalPesterVersion)"
                      PackageDirectory="$(DirPackages)"
                      Sources="@(NuGetSources)"
                      Condition=" '$(ToolsExternalPesterPath)' == 'UNDEFINED' AND   '$(ShouldExecute)' == 'true' "/>
        <SearchPackagesDirectoryForToolDirectory PackagesDir="$(DirPackages)"
                                                 FileToLocate="Pester.psm1"
                                                 Condition=" '$(ToolsExternalPesterPath)' == 'UNDEFINED' AND  '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Path" PropertyName="ToolsExternalPesterPath" />
        </SearchPackagesDirectoryForToolDirectory>
        <Message Text="The Pester module was found at: $(ToolsExternalPesterPath)"
                 Condition="Exists('$(ToolsExternalPesterPath)') AND '$(ShouldExecute)' == 'true' " />
        <Error Text="Could not locate the Pester module path. Cannot execute pester tests."
               Condition="!Exists('$(ToolsExternalPesterPath)') AND '$(ShouldExecute)' == 'true' "/>
    </Target>

    <Target Name="_nBuildKit_Test_Integration_GetPrerequisites">
        <GetSemanticVersionFromFile VersionFile="$(FileSemanticVersion)"
                                    Condition="Exists('$(FileSemanticVersion)')">
            <Output TaskParameter="VersionMajorNext" PropertyName="VersionMajorNext" />
            <Output TaskParameter="VersionSemantic" PropertyName="VersionSemantic" />
        </GetSemanticVersionFromFile>
    </Target>

    <Target Name="nBuildKit_Test_Integration_Run"
            DependsOnTargets="_nBuildKit_Test_Integration_GetToolPaths;_nBuildKit_Test_Integration_GetPrerequisites">
        <PropertyGroup>
            <BranchActiveTest Condition=" '$(BranchActiveTest)' == '' ">feature/nbuildkit_$(VersionSemantic)</BranchActiveTest>

            <DirTestRepository>$(DirTestLocal)\repo</DirTestRepository>
            <DirTestWorkspace>$(DirTestLocal)\workspace</DirTestWorkspace>
            <DirTestTemp>$(DirTestLocal)\temp</DirTestTemp>

            <DirTestDropArtefacts>$(DirTestLocal)\drop\artefacts</DirTestDropArtefacts>
            <DirTestDropNuGet>$(DirTestLocal)\drop\nuget</DirTestDropNuGet>
            <DirTestDropSymbols>$(DirTestLocal)\drop\symbols</DirTestDropSymbols>
        </PropertyGroup>

        <MakeDir Directories="$(DirTestDropArtefacts)"
                 Condition="!Exists('$(DirTestDropArtefacts)')" />
        <MakeDir Directories="$(DirTestDropNuGet)"
                 Condition="!Exists('$(DirTestDropNuGet)')" />
        <MakeDir Directories="$(DirTestDropSymbols)"
                 Condition="!Exists('$(DirTestDropSymbols)')" />

        <TemplateText Template="$(FileTestReport)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="FileReportPesterXmlExpanded" />
        </TemplateText>

        <ItemGroup>
            <TestBuildArguments Include="nbuildkitminimumversion">
                <Value>$(VersionSemantic)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="nbuildkitmaximumversion">
                <Value>$(VersionMajorNext).0.0</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="localNuGetFeed">
                <Value>$(DirBuildDeploy)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="remoteRepositoryUrl">
                <Value>http://github.com/$(GitHubUserName)/$(NameTestRepository)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="activeBranch">
                <Value>$(BranchActiveTest)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="repositoryLocation">
                <Value>$(DirTestRepository)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="workspaceLocation">
                <Value>$(DirTestWorkspace)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="nugetPath">
                <Value>$(DirTestDropNuGet)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="symbolsPath">
                <Value>$(DirTestDropSymbols)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="artefactsPath">
                <Value>$(DirTestDropArtefacts)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="logLocation">
                <Value>$(DirBuildLogs)</Value>
            </TestBuildArguments>
            <TestBuildArguments Include="tempLocation">
                <Value>$(DirTestTemp)</Value>
            </TestBuildArguments>
        </ItemGroup>
        <InvokePesterOnFile PowershellExePath="$(ToolsExternalPowershellPath)"
                            PesterModulePath="$(ToolsExternalPesterPath)"
                            TestFile="$(ScriptTest)"
                            TestArguments="@(TestBuildArguments)"
                            ReportFile="$(FileReportPesterXmlExpanded)"
                            TempDirectory="$(DirBuildTemp)"
                            IgnoreErrors="false"
                            IgnoreExitCode="false" />
    </Target>
 </Project>