<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedTemplateTokens>true</ExistsSharedTemplateTokens>
    </PropertyGroup>
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Build configuration -->
        <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
        <Platform Condition=" '$(Platform)' == '' ">Any CPU</Platform>
        <PlatformWithoutSpaces Condition=" '$(PlatformWithoutSpaces)' == '' ">$(Platform.Replace(" ",""))</PlatformWithoutSpaces>
    
        <!-- Directories -->
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
        
        <!-- Files -->
        <FileSemanticVersion Condition=" '$(FileSemanticVersion)' == '' ">$(DirBuildTemp)\semantic_version.json</FileSemanticVersion>
        <FileReleaseNotesShort Condition=" '$(FileReleaseNotesShort)' == '' ">$(DirBuildTemp)\releasenotes_short.md</FileReleaseNotesShort>
        <FileReleaseNotesFull Condition=" '$(FileReleaseNotesFull)' == '' ">$(DirBuildTemp)\releasenotes_full.md</FileReleaseNotesFull>
        <FileVcsInfo Condition=" '$(FileVcsInfo)' == '' ">$(DirBuildTemp)\vcs.info.json</FileVcsInfo>
    </PropertyGroup>
    
    <Import Project="$(DirMsBuildExtensions)\GetSemanticVersionFromGitHubFlowVersionOutputFile.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\GetSemanticVersionFromGitHubFlowVersionOutputFile.msbuild') AND '$(ExistsExtensionsGetSemanticVersionFromGitHubFlowVersionOutputFile)' != 'true' " />
    <Import Project="$(DirMsBuildExtensions)\GetVcsInfoFromFile.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\GetVcsInfoFromFile.msbuild') AND '$(ExistsExtensionsGetVcsInfoFromFile)' != 'true' " />
    
    <Target Name="nBuildKit_Shared_TemplateTokens_Initialize">
        <GetSemanticVersionFromGitHubFlowVersionOutputFile VersionFile="$(FileSemanticVersion)" 
                                                           Condition="Exists('$(FileSemanticVersion)') AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="VersionMajor" PropertyName="VersionMajor" />
            <Output TaskParameter="VersionMinor" PropertyName="VersionMinor" />
            <Output TaskParameter="VersionPatch" PropertyName="VersionPatch" />
            <Output TaskParameter="VersionBuild" PropertyName="VersionBuild" />
            <Output TaskParameter="VersionSemantic" PropertyName="VersionSemantic" />
            <Output TaskParameter="VersionSemanticFull" PropertyName="VersionSemanticFull" />
        </GetSemanticVersionFromGitHubFlowVersionOutputFile>
        
        <CreateProperty Value="$([System.IO.File]::ReadAllText('$(FileReleaseNotesShort)'))" 
                        Condition="Exists('$(FileReleaseNotesShort)') AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Value" PropertyName="ReleaseNotesShort" />
        </CreateProperty>
        
        <CreateProperty Value="$([System.IO.File]::ReadAllText('$(FileReleaseNotesFull)'))" 
                        Condition="Exists('$(FileReleaseNotesFull)') AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Value" PropertyName="ReleaseNotesFull" />
        </CreateProperty>
        
        <GetVcsInfoFromFile InfoFile="$(FileVcsInfo)"
                            Condition="Exists('$(FileVcsInfo)')">
            <Output TaskParameter="Revision" PropertyName="VcsRevision" />
            <Output TaskParameter="Branch" PropertyName="VcsBranch" />
        </GetVcsInfoFromFile>
        
        <ItemGroup>
            <!-- Versions -->
            <TemplateTokens Include="VersionMajor">
                <ReplacementValue>$(VersionMajor)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VersionMinor">
                <ReplacementValue>$(VersionMinor)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VersionPatch">
                <ReplacementValue>$(VersionPatch)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VersionBuild">
                <ReplacementValue>$(VersionBuild)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VersionSemantic">
                <ReplacementValue>$(VersionSemantic)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VersionSemanticFull">
                <ReplacementValue>$(VersionSemanticFull)</ReplacementValue>
            </TemplateTokens>
            
            <!-- Build setup -->
            <TemplateTokens Include="Configuration">
                <ReplacementValue>$(Configuration)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="Platform">
                <ReplacementValue>$(Platform)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="PlatformWithoutSpaces">
                <ReplacementValue>$(PlatformWithoutSpaces)</ReplacementValue>
            </TemplateTokens>
            
            <!-- VCS information -->
            <TemplateTokens Include="VcsRevision">
                <ReplacementValue>$(VcsRevision)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="VcsBranch">
                <ReplacementValue>$(VcsBranch)</ReplacementValue>
            </TemplateTokens>
            
            <!-- Release notes -->
            <TemplateTokens Include="ReleaseNotesShort">
                <ReplacementValue>$(ReleaseNotesShort)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="ReleaseNotesFull">
                <ReplacementValue>$(ReleaseNotesFull)</ReplacementValue>
            </TemplateTokens>
            
            <!-- Time & date -->
            <TemplateTokens Include="Now">
                <ReplacementValue>$([System.DateTime]::Now.ToString("o"))</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="Date">
                <ReplacementValue>$([System.DateTime]::Now.ToString("yyyy-MM-dd"))</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="DayOfMonth">
                <ReplacementValue>$([System.DateTime]::Now.ToString("dd"))</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="Month">
                <ReplacementValue>$([System.DateTime]::Now.ToString("MM"))</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="Year">
                <ReplacementValue>$([System.DateTime]::Now.ToString("yyyy"))</ReplacementValue>
            </TemplateTokens>
            
            <!-- Product information -->
            <TemplateTokens Include="ProductName">
                <ReplacementValue>$(ProductName)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="ProductNameInFilePath">
                <ReplacementValue>$(ProductNameInFilePath)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="ProductDescription">
                <ReplacementValue>$(ProductDescription)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="ProductNamespace">
                <ReplacementValue>$(ProductNamespace)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="ProductStartingYear">
                <ReplacementValue>$(ProductStartingYear)</ReplacementValue>
            </TemplateTokens>
            
            <TemplateTokens Include="CompanyName">
                <ReplacementValue>$(CompanyName)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="CompanyNameInFilePath">
                <ReplacementValue>$(CompanyNameInFilePath)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="CompanyUrl">
                <ReplacementValue>$(CompanyUrl)</ReplacementValue>
            </TemplateTokens>
            
            <!-- Directory paths -->
            <TemplateTokens Include="DirBin">
                <ReplacementValue>$(DirBuildBinPlatformConfig)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="DirDeploy">
                <ReplacementValue>$(DirBuildDeploy)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="DirLogs">
                <ReplacementValue>$(DirBuildLogs)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="DirSrc">
                <ReplacementValue>$(DirSrc)</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="DirTemp">
                <ReplacementValue>$(DirBuildTemp)</ReplacementValue>
            </TemplateTokens>
            
            <TemplateTokens Include="VersionNBuildKit">
                <ReplacementValue>$(NBuildKitVersion)</ReplacementValue>
            </TemplateTokens>
        </ItemGroup>
    </Target>
</Project>