<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         InitialTargets="nBuildKit_Projects_Common_VerifyProperties"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <NBuildKitVersion>${VersionSemanticNuGet}</NBuildKitVersion>
    </PropertyGroup>
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsProjectCommon>true</ExistsProjectCommon>
    </PropertyGroup>

    <PropertyGroup>
        <!--
            We can't search for the 'settings.props' file because MsBuild won't let us dynamically load files,
            so we have to make some assumptions about the location of the file when working from Visual Studio.
            When running from the build scripts we'll make sure to pass the location in.

            There are two standard locations for the settings.props file. Either it lives in the same directory
            as the solution. Or the solution lives in a 'src' directory which means that the properties file
            lives in the parent directory of the 'src' directory.
        -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == ''  AND Exists('$(SolutionDir)\settings.props')">$([System.IO.Path]::GetFullPath('$(SolutionDir)\settings.props'))</BuildPropertyFile>
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == ''  AND Exists('$(SolutionDir)\..\settings.props')">$([System.IO.Path]::GetFullPath('$(SolutionDir)\..\settings.props'))</BuildPropertyFile>
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">FAILED_TO_LOCATE_BUILDPROPERTYFILE</BuildPropertyFile>

        <!-- Directory structure -->
        <!-- Once we have the settings file we can calculate the workspace directory -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirWorkspace Condition="!Exists('$(DirWorkspace)')">$(SolutionDir)</DirWorkspace>

        <!--
            Note that {3AC096D0-A1C2-E12C-1390-A8335801FDAB} is the project type GUID for test projects in any language
            See here: http://www.codeproject.com/Reference/720512/List-of-Visual-Studio-Project-Type-GUIDs
        -->
        <IsTest Condition=" '$(IsTest)' == '' ">$(ProjectTypeGuids.Contains('{3AC096D0-A1C2-E12C-1390-A8335801FDAB}'))</IsTest>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />

    <!-- Default settings -->
    <PropertyGroup>
        <SolutionDir Condition="'$(SolutionDir)' == '' or '$(SolutionDir)' == '*undefined*'">$(DirSrc)</SolutionDir>

        <DirNBuildKitMsBuild>$(DirPackages)\nBuildKit.MsBuild.$(NBuildKitVersion)\build</DirNBuildKitMsBuild>
        <DirNBuildKitMsBuildShared Condition=" '$(DirNBuildKitMsBuildShared)' == '' ">$(DirNBuildKitMsBuild)</DirNBuildKitMsBuildShared>
        <DirNBuildKitMsBuildExtensions Condition=" '$(DirNBuildKitMsBuildExtensions)' == '' ">$(DirNBuildKitMsBuild)\extensions</DirNBuildKitMsBuildExtensions>
        <DirNBuildKitMsBuildTemplates Condition=" '$(DirNBuildKitMsBuildTemplates)' == '' ">$(DirNBuildKitMsBuild)\templates</DirNBuildKitMsBuildTemplates>

        <DefaultPathProperties>
            DirNBuildKitMsBuild=$(DirNBuildKitMsBuild);
            DirNBuildKitMsBuildShared=$(DirNBuildKitMsBuildShared);
            DirNBuildKitMsBuildExtensions=$(DirNBuildKitMsBuildExtensions);
            DirNBuildKitMsBuildTemplates=$(DirNBuildKitMsBuildTemplates)
        </DefaultPathProperties>
    </PropertyGroup>
</Project>
