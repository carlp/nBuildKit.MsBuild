<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         InitialTargets="nBuildKit_Projects_Common_VerifyProperties"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <Target Name="nBuildKit_Projects_Common_VerifyProperties">
        <Error Text="$(BuildPropertyFile) not found"
                Condition="!Exists('$(BuildPropertyFile)')" />
    </Target>
    
    <Import Project="$(DirNBuildKitMsBuild)\prepare.generatefiles.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\prepare.generatefiles.msbuild') AND '$(ExistsPrepareGenerateFiles)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuild)\prepare.getversion.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\prepare.getversion.msbuild') AND '$(ExistsPrepareGetVersion)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuild)\prepare.vcsinfo.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\prepare.vcsinfo.msbuild') AND '$(ExistsPrepareVcsInfo)' != 'true' " />
            
    <Import Project="$(DirMsBuildExtensions)\PublicKeySignatureFromKeyFile.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\PublicKeySignatureFromKeyFile.msbuild') AND '$()' != 'true' " />
    
    <!-- Clean up all the files we generate ourselves -->
    <PropertyGroup>
        <CleanDependsOn>
            _nBuildKit_Projects_Common_CleanGeneratedFiles;
            _nBuildKit_Projects_Common_ExternalPreClean;
            $(CleanDependsOn);
        </CleanDependsOn>
    </PropertyGroup>
    <Target Name="_nBuildKit_Projects_Common_CleanGeneratedFiles" DependsOnTargets="nBuildKit_Projects_Common_VerifyProperties">
        <ItemGroup>
            <GeneratedFilesToDelete Include="%(FilesToGenerate.FullPath)" />
        </ItemGroup>
        <Delete Files="@(GeneratedFilesToDelete)" />
    </Target>
    
    <!-- Handle any external pre-clean steps -->
    <Target Name="_nBuildKit_Projects_Common_ExternalPreClean"
            Condition=" '@(PreCleanScripts)' != '' ">
        <MSBuild Projects="%(PreCleanScripts.FullPath)" Properties="Configuration=$(Configuration);Platform=$(Platform);BuildPropertyFile=$(BuildPropertyFile);$(DefaultPathProperties);$(DefaultFiles)" />
    </Target>
    
    
    <!-- Locate the installed version of sn.exe -->
    <PropertyGroup>
        <FileSNExe>NotSet</FileSNExe>
    </PropertyGroup>
    <Target Name="_nBuildKit_Projects_Common_GetSnPath">
        <GetFrameworkSdkPath>
            <Output TaskParameter="Path" PropertyName="WindowsSdkPath" />
        </GetFrameworkSdkPath>
        
        <PropertyGroup>
            <FileSNExe>$(WindowsSdkPath)bin\sn.exe</FileSNExe>
        </PropertyGroup>
        
        <!-- For .NET 4.5 there is nothing in the WindowsSdkPath dir but there is in the deeper folder called 'NETFX 4.0 Tools'. -->
        <!-- For .NET 4.5.1 there is nothing in the WindowsSdkPath dir but there is in the deeper folder called 'NETFX 4.5.1 Tools'. -->
        <PropertyGroup>
            <FileSNExe Condition="!Exists($(FileSNExe)) AND Exists('$(WindowsSdkPath)bin\NETFX 4.0 Tools\sn.exe')">$(WindowsSdkPath)bin\NETFX 4.0 Tools\sn.exe</FileSNExe>
            <FileSNExe Condition="!Exists($(FileSNExe)) AND Exists('$(WindowsSdkPath)bin\NETFX 4.5.1 Tools\sn.exe')">$(WindowsSdkPath)bin\NETFX 4.5.1 Tools\sn.exe</FileSNExe>
        </PropertyGroup>
        <Message Text="sn.exe at: $(FileSNExe)" />
    </Target>
    
    <Target Name="_nBuildKit_Projects_Common_PrepareGenerateApplicationManifest"
            DependsOnTargets="_nBuildKit_Projects_Common_GetSnPath"
            Condition=" '$(ShouldGenerateApplicationManifest)' == 'true' AND ( '$(OutputType)' == 'WinExe' OR '$(OutputType)' == 'Exe' )">
        <PublicKeySignatureFromKeyFile SnExe="$(FileSNExe)" 
                                       DirTemp="$(DirBuildTemp)" 
                                       Input="$(AssemblyOriginatorKeyFile)">
            <Output TaskParameter="PublicKey" PropertyName="PublicKeyTokenLocal" />
        </PublicKeySignatureFromKeyFile>
        
        <CreateItem
            Include="ProjectName"
            AdditionalMetadata="ReplacementValue=$(AssemblyName)">
           <Output
               TaskParameter="Include"
               ItemName="TemplateTokens"/>
        </CreateItem>
        <CreateItem
            Include="PublicKeyToken"
            AdditionalMetadata="ReplacementValue=$(PublicKeyTokenLocal)">
           <Output
               TaskParameter="Include"
               ItemName="TemplateTokens"/>
        </CreateItem>
        
        <CreateItem
            Include="$(MSBuildProjectDirectory)\$(AssemblyName).exe.manifest"
            AdditionalMetadata="Template=$(DirNBuildKitMsBuildProjectsCommonTemplates)\app.manifest.in">
           <Output
               TaskParameter="Include"
               ItemName="FilesToGenerate"/>
        </CreateItem>
    </Target>
    
    <!-- Generate the required files -->
    <PropertyGroup>
        <BuildDependsOn>
            _nBuildKit_Projects_Common_PrepareGenerateApplicationManifest;
            _nBuildKit_Projects_Common_GenerateFiles;
            _nBuildKit_Projects_Common_ExternalPreBuild;
            $(BuildDependsOn);
        </BuildDependsOn>
    </PropertyGroup>
    <Target Name="_nBuildKit_Projects_Common_GenerateFiles"
            DependsOnTargets="nBuildKit_Projects_Common_VerifyProperties">
        <CallTarget Targets="nBuildKit_Prepare_GetVersion_Run" />
        <CallTarget Targets="nBuildKit_Prepare_VcsInfo_Run" />
        <CallTarget Targets="nBuildKit_Prepare_GenerateFiles_Run" />
    </Target>

    <!-- Handle any external pre-build steps -->
    <Target Name="_nBuildKit_Projects_Common_ExternalPreBuild"
            Condition=" '@(PreCompilationScripts)' != '' ">
        <MSBuild Projects="%(PreCompilationScripts.FullPath)" Properties="Configuration=$(Configuration);Platform=$(Platform);BuildPropertyFile=$(BuildPropertyFile);$(DefaultPathProperties);$(DefaultFiles)" />
    </Target>
</Project>
