<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Test_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <!-- Note the current script is not meant to be imported! -->
        <ExistsTest>true</ExistsTest>

        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>

        <!--
            Define the DirWorkspace before importing the BuildPropertyFile so that it is defined and can be used by
            the properties in the BuildPropertyFile. Note that we can't define it in the BuildPropertyFile because that
            is imported which means there is no way to get the path of the file.
        -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>

        <!-- The full path to the location of the scripts -->
        <DirMsBuildScripts>$(MSBuildProjectDirectory)</DirMsBuildScripts>
    </PropertyGroup>
    <PropertyGroup>
        <TestStepsPrepareWorkspace>$(DirMsBuildScripts)\test.prepare.workspace.msbuild</TestStepsPrepareWorkspace>
        <TestStepsPrepareGenerateFiles>$(DirMsBuildScripts)\test.prepare.generatefiles.msbuild</TestStepsPrepareGenerateFiles>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />

    <!-- Default values for all the properties in case they were not overriden -->
    <PropertyGroup>
        <DirNBuildKitMsBuild Condition=" '$(DirNBuildKitMsBuild)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuild>
        <DirNBuildKitMsBuildShared Condition=" '$(DirNBuildKitMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuildShared>
        <DirNBuildKitMsBuildExtensions Condition=" '$(DirNBuildKitMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirNBuildKitMsBuildExtensions>
        <DirNBuildKitMsBuildTemplates Condition=" '$(DirNBuildKitMsBuildTemplates)' == '' ">$(MSBuildProjectDirectory)\templates</DirNBuildKitMsBuildTemplates>

        <!--
            Each build file needs to have the paths passed in so that the default directory paths are always known.
            To prevent having to provide them in a lengthy line each time we'll store them here
        -->
        <DefaultPathProperties>
            DirNBuildKitMsBuild=$(DirNBuildKitMsBuild);
            DirNBuildKitMsBuildShared=$(DirNBuildKitMsBuildShared);
            DirNBuildKitMsBuildExtensions=$(DirNBuildKitMsBuildExtensions);
            DirNBuildKitMsBuildTemplates=$(DirNBuildKitMsBuildTemplates)
        </DefaultPathProperties>
        <DefaultProperties>
            NBuildKitVersion=$(NBuildKitVersion)
        </DefaultProperties>
    </PropertyGroup>

    <Target Name="nBuildKit_Test_Run"
            DependsOnTargets="_nBuildKit_Test_DisplayInfo">
        <Error Text="No test properties file was defined."
               Condition=" '$(BuildPropertyFile)' == 'UNDEFINED' " />

        <!-- Execute all the test steps in the given order -->
        <CallTarget Targets="_nBuildKit_Test_Execute" />
    </Target>

    <Target Name="_nBuildKit_Test_DisplayInfo"
            DependsOnTargets="_nBuildKit_Test_DebugLog">
        <Message Text="Testing ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Test_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <!-- Display the targets that will be executed -->
        <Message Text="Executing targets: @(TestStepsToExecute->'%(identity)', '; ')"
                 Importance="low"
                 Condition=" '@(TestStepsToExecute)' != ''" />
        <Message Text="Executing targets: NONE"
                 Importance="low"
                 Condition=" '@(TestStepsToExecute)' == ''" />

        <Message Text=" "
                 Importance="low"/>

        <!-- Display the known directories -->
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit shared files is located at: $(DirNBuildKitMsBuildShared)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Test_Execute"
            Condition=" '@(TestStepsToExecute)' != ''">

        <MSBuild
            BuildInParallel="False"
            Projects="%(TestStepsToExecute.Identity)"
            Properties="BuildPropertyFile=$(BuildPropertyFile);$(DefaultProperties);$(DefaultPathProperties);%(TestStepsToExecute.Properties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="True"
            TargetAndPropertyListSeparators=""
            Targets=""
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="False"
            UseResultsCache="True">
        </MSBuild>

        <OnError ExecuteTargets="_nBuildKit_Test_OnError" />
    </Target>

    <Target Name="_nBuildKit_Test_OnError">
        <MSBuild
            BuildInParallel="False"
            Projects="%(TestFailureStepsToExecute.Identity)"
            Properties="BuildPropertyFile=$(BuildPropertyFile);$(DefaultProperties);$(DefaultPathProperties);%(TestFailureStepsToExecute.Properties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="False"
            TargetAndPropertyListSeparators=""
            Targets=""
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="False"
            UseResultsCache="True"
            Condition=" '@(TestFailureStepsToExecute)' != '' ">
        </MSBuild>
    </Target>
</Project>