<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_PushTo_Directory_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)')" />
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildDeploy Condition=" '$(DirBuildDeploy)' == '' ">$(DirBuild)\deploy</DirBuildDeploy>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
    </PropertyGroup>
    
    <Import Project="$(MSBuildProjectDirectory)\shared.templatetext.msbuild" 
            Condition="Exists('$(MSBuildProjectDirectory)\shared.templatetext.msbuild')" />
    
    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild')" />
    
    <Target Name="nBuildKit_PushTo_Directory_Run" DependsOnTargets="_nBuildKit_PushTo_Directory_DisplayInfo">
        <CallTarget Targets="_nBuildKit_PushTo_Directory_Push" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_nBuildKit_PushTo_Directory_DisplayInfo">
        <Message Text="Copying binaries to the remote file location..." Condition=" '$(ServerDeployPath)' != ''" />
        <Message Text="No remote file location defined!" Condition=" '$(ServerDeployPath)' == ''" />
    </Target>
    
    <Target Name="_nBuildKit_Package_NuGet_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the deliverables is located at:          $(DirBuildDeploy)" />
        <Message Text="The directory containing the temporary build files is located at: $(DirBuildTemp)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
        <Message Text=" " />
        
        <Message Text="Deploying to: %(PushToDirectorySpecs.Identity)" />
        <Message Text=" " />
    </Target>
    
    <Target Name="_nBuildKit_PushTo_Directory_Push" 
            DependsOnTargets="nBuildKit_Shared_TemplateText_Initialize"
            Condition=" '$(ServerDeployPath)' != ''"
            Outputs="%(PushToDirectorySpecs.Identity)">
        <Message Text="Resolving build templates for: %(PushToDirectorySpecs.Identity)" />
        
        <!-- Process the build templates in the input directories -->
        <TemplateText Template="%(PushToDirectorySpecs.Identity)"
                      Tokens="@(BuildTemplateTextTokens)">
            <Output TaskParameter="Result" PropertyName="DirPushToSpecs" />
        </TemplateText>
        
        <!-- Process the build templates in the included files -->
        <TemplateText Template="%(PushToDirectorySpecs.IncludedFiles)"
                      Tokens="@(BuildTemplateTextTokens)"
                      Condition=" '%(PushToDirectorySpecs.IncludedFiles)' != '' ">
            <Output TaskParameter="Result" PropertyName="FilesPushToIncluded" />
        </TemplateText>
        
        <!-- Process the build templates in the excluded files -->
        <TemplateText Template="%(PushToDirectorySpecs.ExcludedFiles)"
                      Tokens="@(BuildTemplateTextTokens)"
                      Condition=" '%(PushToDirectorySpecs.ExcludedFiles)' != '' ">
            <Output TaskParameter="Result" PropertyName="FilesPushToExcluded" />
        </TemplateText>        
        
        <!-- 
            Create the ItemGroup dynamically because creating an ItemGroup in the target with the dynamically
            created properties doesn't work because the wildcards are not always expanded for some reason.
        -->
        <CreateItem
            Include="$(FilesPushToIncluded.Split(';'))"
            Exclude="$(FilesPushToExcluded.Split(';'))">
           <Output
               TaskParameter="Include"
               ItemName="FilesToPush"/>
        </CreateItem>
        
        <MakeDir Directories="$(DirPushToSpecs)" 
                 Condition="!Exists('$(DirPushToSpecs)')" />
        <Copy SourceFiles="@(FilesToPush)" 
              DestinationFolder="$(DirPushToSpecs)" />
    </Target>
</Project>