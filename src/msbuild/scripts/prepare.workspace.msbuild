<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Prepare_Workspace_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsPrepareWorkspace>true</ExistsPrepareWorkspace>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        <ShouldClean Condition=" '$(ShouldClean)' == '' ">true</ShouldClean>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$(MSBuildProjectDirectory)</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildDeploy Condition=" '$(DirBuildDeploy)' == '' ">$(DirBuild)\deploy</DirBuildDeploy>
        <DirBuildLogs Condition=" '$(DirBuildLogs)' == '' ">$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
    </PropertyGroup>
    
    <Target Name="nBuildKit_Prepare_Workspace_Run" DependsOnTargets="_nBuildKit_Prepare_Workspace_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Prepare_Workspace_Clean" />
    </Target>
    
    <Target Name="_nBuildKit_Prepare_Workspace_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Configuration values:" />
        <Message Text="ShouldClean:             $(ShouldClean)" />
        <Message Text=" " />
        
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the deliverables is located at:          $(DirBuildDeploy)" />
        <Message Text="The directory containing the build logs is located at:            $(DirBuildLogs)" />
        <Message Text="The directory containing the temporary build files is located at: $(DirBuildTemp)" />
        <Message Text="The directory containing the NuGet packages is located at:        $(DirPackages)" />
        <Message Text="The directory containing the source code is located at:           $(DirSrc)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_nBuildKit_Prepare_Workspace_DisplayInfo" DependsOnTargets="_nBuildKit_Prepare_Workspace_DebugLog">
        <Message Text="Preparing workspace ..." />
    </Target>
    
    <!-- Clean -->
    <Target Name="_nBuildKit_Prepare_Workspace_Clean" DependsOnTargets="_nBuildKit_Prepare_Workspace_DisplayInfo" Condition="$(ShouldClean)">
        <!-- 
            We'll try to delete the directory but that may fail randomly because
            some file is being locked (by some other process). This could leads to a failing task, but ..
            the next task is run and then the delete command still executes (delayed 
            by the OS).
        -->
        <ItemGroup>
            <BuildFilesToDelete Include="$(DirBuild)\**\*.*"/>
        </ItemGroup>
        <Delete Files="@(BuildFilesToDelete)" 
                Condition=" '$(ShouldExecute)' == 'true' "
                ContinueOnError="True" />
        
        <ItemGroup>
            <BuildDirectoriesToDelete Include="$(DirBuildDeploy)" />
            <BuildDirectoriesToDelete Include="$(DirBuildLogs)" />
            <BuildDirectoriesToDelete Include="$(DirBuildTemp)" />
            <BuildDirectoriesToDelete Include="$(DirBuildDeploy)" />
            <BuildDirectoriesToDelete Include="$(DirBuild)" />
        </ItemGroup>
        <RemoveDir Directories="@(BuildDirectoriesToDelete)" 
                   Condition=" '$(ShouldExecute)' == 'true' "
                   ContinueOnError="True" />
    </Target>
 </Project>