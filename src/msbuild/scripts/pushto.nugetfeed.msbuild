<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_PushTo_NuGet_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsPushToNuGet>true</ExistsPushToNuGet>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildDeploy Condition=" '$(DirBuildDeploy)' == '' ">$(DirBuild)\deploy</DirBuildDeploy>
        
        <!-- nBuildKit directories -->
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
        <DirMsBuildShared Condition=" '$(DirMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirMsBuildShared>
        
        <!-- Server paths -->
        <!-- By default it pushes to nuget.org -->
        <NuGetSourceUrl Condition=" '$(NuGetSourceUrl)' == '' "></NuGetSourceUrl>
        
        <!-- External tools -->
        <ToolsExternalNuGetPath Condition=" '$(ToolsExternalNuGetPath)' == '' ">NuGet.exe</ToolsExternalNuGetPath>
    </PropertyGroup>
    
    <Import Project="$(DirMsBuildShared)\shared.templatetokens.msbuild" 
            Condition="Exists('$(DirMsBuildShared)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />
    
    <Import Project="$(DirMsBuildExtensions)\NuGetPush.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\NuGetPush.msbuild') AND '$(ExistsExtensionsNuGetPush)' != 'true' "/>
    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />
            
    <Target Name="nBuildKit_PushTo_NuGet_Run" DependsOnTargets="_nBuildKit_PushTo_NuGet_DisplayInfo">
        <CallTarget Targets="_nBuildKit_PushTo_NuGet_Push" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_nBuildKit_PushTo_NuGet_DisplayInfo" DependsOnTargets="_nBuildKit_PushTo_NuGet_DebugLog">
        <Message Text="Pushing NuGet packages to: $(NuGetSourceUrl)" Condition=" '$(NuGetSourceUrl)' != ''" />
        <Message Text="No NuGet source defined, pushing to NuGet.org" Condition=" '$(NuGetSourceUrl)' == ''" />
    </Target>
    
    <Target Name="_nBuildKit_PushTo_NuGet_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the deliverables is located at:          $(DirBuildDeploy)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
        <Message Text=" " />
        
        <Message Text="Pushing NuGet packages to: $(NuGetSourceUrl)" />
        <Message Text=" " />
        
        <Message Text="NuGet command line executable is located at: $(ToolsExternalNuGetPath)" />
        <Message Text=" " />
    </Target>
    
    <Target Name="_nBuildKit_PushTo_NuGet_Push" 
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <Error Text="No NuGet executable defined. Will not be able to restore the packages."
               Condition=" '$(ToolsExternalNuGetPath)' == '' AND '$(ShouldExecute)' == 'true' " />
        
        <TemplateText Template="@(NuGetPackagesToPush)"
                      Tokens="@(TemplateTokens)"
                      Condition=" '@(NuGetPackagesToPush)' != '' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Result" PropertyName="NuGetPackagesToPushExpanded" />
        </TemplateText>
        
        <!-- 
            Create the ItemGroup dynamically because creating an ItemGroup in the target with the dynamically
            created properties doesn't work because the wildcards are not always expanded for some reason.
        -->
        <CreateItem
            Include="$(NuGetPackagesToPushExpanded.Split(';'))"
            Condition=" '$(NuGetPackagesToPushExpanded)' != '' ">
           <Output
               TaskParameter="Include"
               ItemName="NuGetPackagesToPushLocal"/>
        </CreateItem>
        <Message Text="The following NuGet packages were specified in the settings file: "
                 Condition=" '@(NuGetPackagesToPushLocal)' != '' " />
        <Message Text="@(NuGetPackagesToPushLocal)"
                 Condition=" '@(NuGetPackagesToPushLocal)' != '' " />
        <Message Text="No NuGet packages were specified in the settings file. Using default settings."
                 Condition=" '@(NuGetPackagesToPushLocal)' == '' " />
        
        <ItemGroup Condition=" '@(NuGetPackagesToPushLocal)' == '' " >
            <NuGetPackagesToPushLocal Include="$(DirBuildDeploy)\*.nupkg"/>
        </ItemGroup>
        <Error Text="There are no files to be pushed to the NuGet feed"
               Condition=" '@(NuGetPackagesToPushLocal)' == '' AND '$(ShouldExecute)' == 'true' "/>
        
        <Message Text="Pushing: @(NuGetPackagesToPushLocal)" />
        <NuGetPush NuGetPath="$(ToolsExternalNuGetPath)"
                   Source="$(NuGetSourceUrl)"
                   PackagesToPush="@(NuGetPackagesToPushLocal)" 
                   Condition=" '$(ShouldExecute)' == 'true' " />
    </Target>
</Project>