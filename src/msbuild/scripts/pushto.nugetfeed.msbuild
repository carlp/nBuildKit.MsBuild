<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_PushTo_NuGet_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsPushToNuGet>true</ExistsPushToNuGet>

        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>

        <!--
            Define the DirWorkspace before importing the BuildPropertyFile so that it is defined and can be used by
            the properties in the BuildPropertyFile. Note that we can't define it in the BuildPropertyFile because that
            is imported which means there is no way to get the path of the file.
        -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />

    <Import Project="$(DirMsBuildShared)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirMsBuildShared)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirMsBuildExtensions)\NuGetPush.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\NuGetPush.msbuild') AND '$(ExistsExtensionsNuGetPush)' != 'true' "/>
    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_PushTo_NuGet_Run" DependsOnTargets="_nBuildKit_PushTo_NuGet_DisplayInfo">
        <CallTarget Targets="_nBuildKit_PushTo_NuGet_Push" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_PushTo_NuGet_DisplayInfo" DependsOnTargets="_nBuildKit_PushTo_NuGet_DebugLog">
        <Message Text="Pushing NuGet packages to: $(NuGetSourceUrl)" Condition=" '$(NuGetSourceUrl)' != 'UNDEFINED' " />
        <Message Text="No NuGet source defined, pushing to NuGet.org" Condition=" '$(NuGetSourceUrl)' == 'UNDEFINED' " />
    </Target>

    <Target Name="_nBuildKit_PushTo_NuGet_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message Text="The directory containing the deliverables is located at:           $(DirBuildDeploy)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirMsBuildExtensions)" />
        <Message Text=" " />

        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirMsBuildExtensions)" />
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirMsBuildTemplates)" />
        <Message Text="The directory containing the nBuildKit shared files is located at: $(DirMsBuildShared)" />

        <Message Text="Pushing NuGet packages to:                                         nuget.org"
                 Condition=" '$(NuGetSourceUrl)' == 'UNDEFINED' " />
        <Message Text="Pushing NuGet packages to:                                         $(NuGetSourceUrl)"
                 Condition=" '$(NuGetSourceUrl)' != 'UNDEFINED' " />
        <Message Text=" " />

        <Message Text="NuGet command line executable is located at:                       $(ToolsExternalNuGetPath)" />
        <Message Text=" " />
    </Target>

    <Target Name="_nBuildKit_PushTo_NuGet_Push"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <Error Text="No NuGet executable defined. Will not be able to restore the packages."
               Condition=" '$(ToolsExternalNuGetPath)' == '' AND '$(ShouldExecute)' == 'true' " />

        <CreateProperty Value="$(NuGetSourceUrl)"
                        Condition=" '$(NuGetSourceUrl)' != 'UNDEFINED' ">
            <Output TaskParameter="Value" PropertyName="NuGetRepositoryToPushTo" />
        </CreateProperty>

        <TemplateText Template="@(NuGetPackagesToPush)"
                      Tokens="@(TemplateTokens)"
                      Condition=" '@(NuGetPackagesToPush)' != '' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Result" PropertyName="NuGetPackagesToPushExpanded" />
        </TemplateText>

        <!--
            Create the ItemGroup dynamically because creating a normal ItemGroup in the target with dynamically
            created properties fails to expand the wildcards.
        -->
        <CreateItem
            Include="$(NuGetPackagesToPushExpanded.Split(';'))"
            Condition=" '$(NuGetPackagesToPushExpanded)' != '' ">
           <Output
               TaskParameter="Include"
               ItemName="NuGetPackagesToPushLocal"/>
        </CreateItem>
        <Message Text="The following NuGet packages were specified in the settings file: "
                 Condition=" '@(NuGetPackagesToPushLocal)' != '' " />
        <Message Text="@(NuGetPackagesToPushLocal)"
                 Condition=" '@(NuGetPackagesToPushLocal)' != '' " />
        <Message Text="No NuGet packages were specified in the settings file. Using default settings."
                 Condition=" '@(NuGetPackagesToPushLocal)' == '' " />

        <ItemGroup Condition=" '@(NuGetPackagesToPushLocal)' == '' " >
            <NuGetPackagesToPushLocal Include="$(DirBuildDeploy)\*.nupkg"/>
        </ItemGroup>
        <Error Text="There are no files to be pushed to the NuGet feed"
               Condition=" '@(NuGetPackagesToPushLocal)' == '' AND '$(ShouldExecute)' == 'true' "/>

        <Message Text="Pushing: @(NuGetPackagesToPushLocal)" />
        <NuGetPush NuGetPath="$(ToolsExternalNuGetPath)"
                   Source="$(NuGetRepositoryToPushTo)"
                   PackagesToPush="@(NuGetPackagesToPushLocal)"
                   Condition=" '$(ShouldExecute)' == 'true' " />
    </Target>
</Project>