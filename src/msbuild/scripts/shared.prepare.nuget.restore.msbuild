<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Shared_Prepare_NuGet_Restore_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedPrepareNuGetRestore>true</ExistsSharedPrepareNuGetRestore>

        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>

        <!--
            Define the DirWorkspace before importing the BuildPropertyFile so that it is defined and can be used by
            the properties in the BuildPropertyFile. Note that we can't define it in the BuildPropertyFile because that
            is imported which means there is no way to get the path of the file.
        -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\NuGetRestore.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\NuGetRestore.msbuild') AND '$(ExistsExtensionsNuGetRestore)' != 'true' "/>

    <PropertyGroup>
        <FileNuGetRestoreComplete>$(DirBuildTemp)\nuget_restore.json</FileNuGetRestoreComplete>
    </PropertyGroup>

    <Target Name="nBuildKit_Shared_Prepare_NuGet_Restore_Run"
            DependsOnTargets="_nBuildKit_Shared_Prepare_NuGet_Restore_DisplayInfo"
            Condition="!Exists('$(FileNuGetRestoreComplete)')">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_NuGet_Restore_Packages" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_Nuget_Restore_IndicateComplete" />
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_NuGet_Restore_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the build output is located at:           $(DirBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)"
                 Importance="low"/>
        <Message Text="The directory containing the NuGet packages is located at:         $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="NuGet command line executable is located at:                       $(ToolsExternalNuGetPath)"
                 Importance="low"/>
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Shared_Prepare_NuGet_Restore_DisplayInfo"
            DependsOnTargets="_nBuildKit_Shared_Prepare_NuGet_Restore_DebugLog">
        <Message Text="Restoring packages ..."
                 Importance="normal"/>
    </Target>

    <!-- NuGet restore -->
    <Target Name="_nBuildKit_Shared_Prepare_NuGet_Restore_Packages"
            DependsOnTargets="_nBuildKit_Shared_Prepare_NuGet_Restore_DisplayInfo">
        <Error Text="No NuGet executable defined. Will not be able to restore the packages."
               Condition=" '$(ToolsExternalNuGetPath)' == '' AND '$(ShouldExecute)' == 'true' " />

        <ItemGroup>
            <NuGetPackageFiles Include="$(DirWorkspace)\packages.config"
                               Condition="Exists('$(DirWorkspace)\packages.config')" />
            <NuGetPackageFiles Include="$(DirNBuildKitMsBuild)\packages.config"
                               Condition="Exists('$(DirNBuildKitMsBuild)\packages.config')" />
            <NuGetPackageFiles Include="$(StageSpecificNuGetPackageFilesToRestore)"
                               Condition=" '$(StageSpecificNuGetPackageFilesToRestore)' != '' " />
        </ItemGroup>

        <Message Text="No NuGet package configuration files found to restore packages from."
                 Importance="low"
                 Condition=" '@(NuGetPackageFiles)' == '' " />
        <NuGetRestore NuGetPath="$(ToolsExternalNuGetPath)"
                      PackageFile="%(NuGetPackageFiles.FullPath)"
                      PackageDirectory="$(DirPackages)"
                      Condition=" '@(NuGetPackageFiles)' != '' AND '$(ShouldExecute)' == 'true' "/>
    </Target>

    <PropertyGroup>
        <Now>$([System.DateTime]::Now.ToString("o"))</Now>
    </PropertyGroup>
    <Target Name="_nBuildKit_Shared_Prepare_Nuget_Restore_IndicateComplete"
            DependsOnTargets="_nBuildKit_Shared_Prepare_NuGet_Restore_Packages">
        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileNuGetRestoreComplete)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <ItemGroup>
            <Items_NuGetRestore Include="{" />
            <Items_NuGetRestore Include="    &quot;RestoredAt&quot;: &quot;$(Now)&quot;," />
            <Items_NuGetRestore Include="}" />
        </ItemGroup>

        <WriteLinesToFile File="$(FileNuGetRestoreComplete)"
                          Lines="@(Items_NuGetRestore)"
                          Overwrite="true"
                          Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>