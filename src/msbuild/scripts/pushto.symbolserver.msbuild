<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_PushTo_SymbolServer_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsPushToSymbolServer>true</ExistsPushToSymbolServer>

        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>

        <!--
            Define the DirWorkspace before importing the BuildPropertyFile so that it is defined and can be used by
            the properties in the BuildPropertyFile. Note that we can't define it in the BuildPropertyFile because that
            is imported which means there is no way to get the path of the file.
        -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />

    <Import Project="$(DirMsBuildShared)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirMsBuildShared)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Target Name="nBuildKit_PushTo_SymbolServer_Run" DependsOnTargets="_nBuildKit_PushTo_SymbolServer_DisplayInfo">
        <CallTarget Targets="_nBuildKit_PushTo_SymbolServer_Push" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_PushTo_SymbolServer_DisplayInfo" DependsOnTargets="_nBuildKit_PushTo_SymbolServer_DebugLog">
        <Message Text="Pushing NuGet symbol packages to the symbol server ..."
                 Importance="low"
                 Condition=" '$(SymbolServerUrl)' == '' AND '$(SymbolServerUrl)' != 'UNDEFINED' " />
        <Error Text="No symbol server path defined!"
               Condition=" '$(SymbolServerUrl)' == '' OR '$(SymbolServerUrl)' == 'UNDEFINED' " />
    </Target>

    <Target Name="_nBuildKit_PushTo_SymbolServer_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirMsBuildShared)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="Pushing symbol packages to:                                        $(SymbolServerUrl)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_PushTo_SymbolServer_Push"
            Condition=" '$(SymbolServerUrl)' != '' AND '$(SymbolServerUrl)' != 'UNDEFINED' "
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <TemplateText Template="@(SymbolPackagesToPush)"
                      Tokens="@(TemplateTokens)"
                      Condition=" '@(SymbolPackagesToPush)' != '' AND '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Result" PropertyName="SymbolPackagesToPushExpanded" />
        </TemplateText>

        <!--
            Create the ItemGroup dynamically because creating a normal ItemGroup in the target with dynamically
            created properties doesn't expand the wildcards.
        -->
        <CreateItem
            Include="$(SymbolPackagesToPushExpanded.Split(';'))"
            Condition=" '$(SymbolPackagesToPushExpanded)' != '' ">
           <Output
               TaskParameter="Include"
               ItemName="SymbolPackagesToPush"/>
        </CreateItem>
        <Error Text="There are no files to be pushed to the symbol server"
               Condition=" '@(SymbolPackagesToPush)' == '' AND '$(ShouldExecute)' == 'true' "/>

        <Copy SourceFiles="@(SymbolPackagesToPush)"
              DestinationFolder="$(SymbolServerUrl)\"
              Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
</Project>