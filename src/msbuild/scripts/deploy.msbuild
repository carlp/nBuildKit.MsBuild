<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Deploy_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <!-- Note the current script is not meant to be imported! -->
        <ExistsDeploy>true</ExistsDeploy>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
        
        <!-- 
            Define the DirWorkspace before importing the BuildPropertyFile so that it is defined and can be used by
            the properties in the BuildPropertyFile. Note that we can't define it in the BuildPropertyFile because that
            is imported which means there is no way to get the path of the file.
        -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
    </PropertyGroup>
    <PropertyGroup>
        <DeployStepTagVcs>$(DirMsBuildScripts)\tag.vcs.msbuild</DeployStepTagVcs>
        <DeployStepsPushToNuget>$(DirMsBuildScripts)\pushto.nugetfeed.msbuild</DeployStepsPushToNuget>
        <DeployStepsPushToDirectory>$(DirMsBuildScripts)\pushto.directory.msbuild</DeployStepsPushToDirectory>
        <DeployStepsPushToSymbolServer>$(DirMsBuildScripts)\pushto.symbolserver.msbuild</DeployStepsPushToSymbolServer>
        <DeployStepsPushToGitHubRelease>$(DirMsBuildScripts)\pushto.githubrelease.msbuild</DeployStepsPushToGitHubRelease>
    </PropertyGroup>
    <ItemGroup>
        <DeployTargets Include="$(DeployTargetTag)">
            <Order>1</Order>
            <TargetToExecute>_nBuildKit_Deploy_Tag</TargetToExecute>
        </DeployTargets>
        
        <DeployTargets Include="$(DeployTargetPushTo)">
            <Order>2</Order>
            <TargetToExecute>_nBuildKit_Deploy_PushTo</TargetToExecute>
        </DeployTargets>
    </ItemGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
            
    <!-- Default values for all the properties in case they were not overriden -->
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">true</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Configurations -->
        <TestConfiguration Condition=" '$(TestConfiguration)' == '' ">release</TestConfiguration>
        <ProductionConfiguration Condition=" '$(ProductionConfiguration)' == '' ">release</ProductionConfiguration>
        <Platform Condition=" '$(Platform)' == '' ">Any CPU</Platform>
        
        <!-- Directory structure -->
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildDeploy Condition=" '$(DirBuildDeploy)' == '' ">$(DirBuild)\deploy</DirBuildDeploy>
        <DirBuildLogs Condition=" '$(DirBuildLogs)' == '' ">$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
        <DirPackages Condition=" '$(DirPackages)' == '' ">$(DirWorkspace)\packages</DirPackages>
        <DirSrc Condition=" '$(DirSrc)' == '' ">$(DirWorkspace)\src</DirSrc>
        <DirTemplates Condition=" '$(DirTemplates)' == '' ">$(DirWorkspace)\templates</DirTemplates>
        
        <DirMsBuildShared Condition=" '$(DirMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirMsBuildShared>
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
        <DirMsBuildTemplates Condition=" '$(DirMsBuildTemplates)' == '' ">$(MSBuildProjectDirectory)\templates</DirMsBuildTemplates>
        
        <!-- Server paths -->
        <NuGetSourceUrl Condition=" '$(NuGetSourceUrl)' == '' "></NuGetSourceUrl>
        <SymbolServerUrl Condition=" '$(SymbolServerUrl)' == '' "></SymbolServerUrl>
        
        <!-- Files -->
        <FileSemanticVersion Condition=" '$(FileSemanticVersion)' == '' ">$(DirBuildTemp)\semantic_version.json</FileSemanticVersion>
        <FileReleaseNotesShort Condition=" '$(FileReleaseNotesShort)' == '' ">$(DirBuildTemp)\releasenotes_short.md</FileReleaseNotesShort>
        <FileReleaseNotesFull Condition=" '$(FileReleaseNotesFull)' == '' ">$(DirBuildTemp)\releasenotes_full.md</FileReleaseNotesFull>
        
        <!-- External tools -->
        <ToolsExternalNuGetPath Condition=" '$(ToolsExternalNuGetPath)' == '' ">NuGet.exe</ToolsExternalNuGetPath>
        <ToolsExternalGitPath Condition=" '$(ToolsExternalGitPath)' == '' ">git.exe</ToolsExternalGitPath>
        <ToolsExternalTfsPath Condition=" '$(ToolsExternalTfsPath)' == '' ">tf.exe</ToolsExternalTfsPath>
        
        <!-- 
            Each build file needs to have the paths passed in so that the default directory paths are always known.
            To prevent having to provide them in a lengthy line each time we'll store them here 
        -->
        <DefaultPathProperties>
            DirWorkspace=$(DirWorkspace);
            DirBuild=$(DirBuild);
            DirBuildDeploy=$(DirBuildDeploy);
            DirBuildLogs=$(DirBuildLogs);
            DirBuildTemp=$(DirBuildTemp);
            DirPackages=$(DirPackages);
            DirSrc=$(DirSrc);
            DirTemplates=$(DirTemplates);
            DirMsBuildExtensions=$(DirMsBuildExtensions);
            DirMsBuildShared=$(DirMsBuildShared);
            DirMsBuildTemplates=$(DirMsBuildTemplates)
        </DefaultPathProperties>
        <DefaultFiles>
            FileVersionSemantic=&quot;$(FileSemanticVersion)&quot;
        </DefaultFiles>
        <DefaultProperties>
            ShouldDisplayDebugLog=$(ShouldDisplayDebugLog);
            ShouldExecute=$(ShouldExecute);
            NBuildKitVersion=$(NBuildKitVersion)
        </DefaultProperties>
    </PropertyGroup>
    
    <Target Name="nBuildKit_Deploy_Run" DependsOnTargets="_nBuildKit_Deploy_DisplayInfo">
        <Error Text="No build properties file was defined."
               Condition=" '$(BuildPropertyFile)' == 'UNDEFINED' " />
        
        <!-- Execute all the build tasks in the given order -->
        <CallTarget Targets="_nBuildKit_Deploy_Execute" />
    </Target>
    
    <Target Name="_nBuildKit_Deploy_DisplayInfo" DependsOnTargets="_nBuildKit_Deploy_DebugLog">
        <Message Text="Deploying ..." />
    </Target>
    
    <Target Name="_nBuildKit_Deploy_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <!-- Display all the configuration values here -->
        <Message Text="Configuration values:" />
                 
        <Message Text="TestConfiguration:       $(TestConfiguration)" />
        <Message Text="ProductionConfiguration: $(ProductionConfiguration)" />
        <Message Text="Platform:                $(Platform)" />
        <Message Text=" " />
        
        <!-- Display the targets that will be executed -->
        <Message Text="Executing targets: @(BuildTasksToExecute->'%(identity)', '; ')" 
                 Condition=" '@(DeployTasksToExecute)' != ''" />
        <Message Text="Executing targets: NONE" 
                 Condition=" '@(DeployTasksToExecute)' == '' " />
        <Message Text=" " />
                 
        <!-- Display the known directories -->
        <Message Text="Project directory structure:"/>
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the deliverables is located at:          $(DirBuildDeploy)" />
        <Message Text="The directory containing the build logs is located at:            $(DirBuildLogs)" />
        <Message Text="The directory containing the temporary build files is located at: $(DirBuildTemp)" />
        <Message Text="The directory containing the NuGet packages is located at:        $(DirPackages)" />
        <Message Text="The directory containing the source code is located at:           $(DirSrc)" />
        <Message Text="The directory containing the local template files is located at:  $(DirTemplates)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
        <Message Text="The directory containing the nBuildKit templates is located at:   $(DirMsBuildTemplates)" />
        <Message Text=" " />
        
        <Message Text="Project files:" />
        <Message Text="The MsBuild XML version file is located at:                                  $(FileVersionMsBuild)" 
                 Condition="Exists('$(FileVersionMsBuild)')" />
        <Message Text="The semantic version file is located at:                                     $(FileSemanticVersion)" />
        <Message Text="The file containing the release notes for the current release is located at: $(FileReleaseNotesShort)" />
        <Message Text="The file containing the release notes for all releases is located at:        $(FileReleaseNotesFull)" />
        <Message Text=" " />
        
        <Message Text="Server paths:" />
        <Message Text="Pushing NuGet packages to: $(NuGetSourceUrl)" />
        <Message Text="Deploying to: %(PushToDirectorySpecs.Identity)" />
        <Message Text="Pushing symbol packages to: $(SymbolServerUrl)" />
        <Message Text=" " />
        
        <Message Text="External tools:" />
        <Message Text="NuGet command line executable is located at: $(ToolsExternalNuGetPath)" />
        <Message Text="Git command line executable is located at: $(ToolsExternalGitPath)" />
        <Message Text="TFS command line executable is located at: $(ToolsExternalTfsPath)" />
        <Message Text=" " />
    </Target>

    <PropertyGroup>
        <DirMsBuildScripts>$(MSBuildProjectDirectory)</DirMsBuildScripts>
    </PropertyGroup>
    
    <!-- Add one or more tags to the VCS -->
    <Target Name="_nBuildKit_Deploy_Execute">
        <MsBuild Projects="%(DeployStepsToExecute.Identity)"
                 Properties="BuildPropertyFile=$(BuildPropertyFile);$(DefaultProperties);$(DefaultPathProperties);$(DefaultFiles);%(DeployStepsToExecute.Properties)" />
    </Target>
</Project>