<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Shared_Prepare_GatherReleaseNotes_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedPrepareGatherReleaseNotes>true</ExistsSharedPrepareGatherReleaseNotes>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.basesettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.basesettings.props') AND '$(ExistsSharedBaseSettings)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props') AND '$(ExistsSharedImportSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\GetIssuesForGitHubMilestone.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GetIssuesForGitHubMilestone.msbuild') AND '$(ExistsExtensionsGetIssuesForGitHubMilestone)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild') AND '$(ExistsExtensionsGetSemanticVersionFromFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\NuGetInstall.msbuild') AND '$(ExistsExtensionsNuGetInstall)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolPath)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild') AND '$(ExistsExtensionsTemplateFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />

    <Import Project="$(ReleaseNotesScriptPath)"
            Condition=" '$(ReleaseNotesScriptPath)' != '' AND '$(ReleaseNotesScriptPath)' != 'UNDEFINED' AND Exists('$(ReleaseNotesScriptPath)')" />

    <Target Name="nBuildKit_Shared_Prepare_GatherReleaseNotes_Run"
            DependsOnTargets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_DisplayInfo"
            Condition=" '$(FileReleaseNotes)' != 'UNDEFINED' ">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromCustomAlgorithm"/>
        <CallTarget Targets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromGitHubMilestone" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_WriteToTextFile" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_DisplayInfo"
            DependsOnTargets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_DebugLog">
        <Message Text="Gathering release notes ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_DebugLog"
            Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                                      $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the NuGet packages is located at:                        $(DirPackages)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:                       $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:                     $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:                   $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="The semantic version file is located at:                                          $(FileSemanticVersion)"
                 Importance="low"/>
        <Message Text="The text file containing the release notes for the current release is located at: $(FileReleaseNotes)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_GetPrerequisites">
        <GetSemanticVersionFromFile VersionFile="$(FileSemanticVersion)"
                                    Condition="Exists('$(FileSemanticVersion)')">
            <Output TaskParameter="VersionSemantic" PropertyName="VersionSemantic" />
        </GetSemanticVersionFromFile>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromCustomAlgorithm"
            DependsOnTargets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_GetPrerequisites"
            Condition="Exists('$(ReleaseNotesScriptPath)')">
        <Message Text="Getting the release notes from the custom release note algorithm ..."
                 Importance="low"/>

        <CallTarget Targets="_Custom_GetIssueInformationForCurrentRelease" />
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromGitHubMilestone"
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize;_nBuildKit_Shared_Prepare_GatherReleaseNotes_GetPrerequisites"
            Condition="!Exists('$(ReleaseNotesScriptPath)') AND '$(GitHubUserName)' != 'UNDEFINED' AND '$(GitHubRepositoryName)' != 'UNDEFINED' ">
        <Message Text="Getting the release notes from a github milestone ..."
                 Importance="low"/>

        <TemplateText Template="$(GitHubMilestoneName)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="MilestoneName" />
        </TemplateText>

        <GetIssuesForGitHubMilestone GitHubUserName="$(GitHubUserName)"
                                     GitHubProjectName="$(GitHubRepositoryName)"
                                     MilestoneName="$(MilestoneName)"
                                     IssueState="closed">
            <Output TaskParameter="Issues" ItemName="ReleaseNoteIssues"/>
        </GetIssuesForGitHubMilestone>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_GatherReleaseNotes_WriteToTextFile"
            DependsOnTargets="_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromCustomAlgorithm;_nBuildKit_Shared_Prepare_GatherReleaseNotes_IssuesFromGitHubMilestone"
            Condition=" '$(FileReleaseNotes)' != 'UNDEFINED' ">
        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileReleaseNotes)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <ItemGroup>
            <ReleaseNoteLines Include="@(ReleaseNoteIssues->'[%(Identity)] %(Title) (%(UserName) - %(UserUrl))', '&#x0d;&#x0a;')" />
        </ItemGroup>

        <WriteLinesToFile File="$(FileReleaseNotes)"
                          Lines="@(ReleaseNoteLines)"
                          Overwrite="true"
                          Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>