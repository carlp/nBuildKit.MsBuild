<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Prepare_NuGet_Restore_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsPrepareNuGetRestore>true</ExistsPrepareNuGetRestore>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
    
    <PropertyGroup>
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirPackages Condition=" '$(DirPackages)' == '' ">$(DirWorkspace)\packages</DirPackages>
        
        <!-- nBuildKit directories -->
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
        
        <!-- External tools -->
        <ToolsExternalNuGetPath Condition=" '$(ToolsExternalNuGetPath)' == '' ">NuGet.exe</ToolsExternalNuGetPath>
    </PropertyGroup>
    
    <Import Project="$(DirMsBuildExtensions)\NuGetRestore.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\NuGetRestore.msbuild') AND '$(ExistsExtensionsNuGetRestore)' != 'true' "/>    

    <Target Name="nBuildKit_Prepare_NuGet_Restore_Run" DependsOnTargets="_nBuildKit_Prepare_NuGet_Restore_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Prepare_NuGet_Restore_Packages" />
    </Target>
    
    <Target Name="_nBuildKit_Prepare_NuGet_Restore_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the NuGet packages is located at:        $(DirPackages)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
        <Message Text=" " />
        
        <Message Text="NuGet command line executable is located at: $(ToolsExternalNuGetPath)" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_nBuildKit_Prepare_NuGet_Restore_DisplayInfo" DependsOnTargets="_nBuildKit_Prepare_NuGet_Restore_DebugLog">
        <Message Text="Restoring packages ..." />
    </Target>

    <!-- NuGet restore -->
    <Target Name="_nBuildKit_Prepare_NuGet_Restore_Packages" DependsOnTargets="_nBuildKit_Prepare_NuGet_Restore_DisplayInfo">
        <Error Text="No NuGet executable defined. Will not be able to restore the packages."
               Condition=" '$(ToolsExternalNuGetPath)' == '' AND '$(ShouldExecute)' == 'true' " />
        
        <ItemGroup>
            <NuGetPackageFiles Include="$(DirWorkspace)\**\packages.config"
                               Exclude="$(DirPackages)\**\packages.config;$(DirBuild)\**\packages.config" />
        </ItemGroup>
        
        <Message Text="No NuGet package configuration files found to restore packages from."
                 Condition=" '@(NuGetPackageFiles)' == '' " />
        <NuGetRestore NuGetPath="$(ToolsExternalNuGetPath)" 
                      PackageFile="%(NuGetPackageFiles.FullPath)" 
                      PackageDirectory="$(DirPackages)"
                      Condition=" '@(NuGetPackageFiles)' != '' AND '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>