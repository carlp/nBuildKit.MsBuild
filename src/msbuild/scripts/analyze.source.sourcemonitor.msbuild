<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0"
         DefaultTargets="nBuildKit_Analyze_Source_SourceMonitor_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsAnalyzeSourceSourceMonitor>true</ExistsAnalyzeSourceSourceMonitor>
        
        <!-- The full path to the settings file that contains all the settings for the build process -->
        <BuildPropertyFile Condition=" '$(BuildPropertyFile)' == '' ">UNDEFINED</BuildPropertyFile>
    </PropertyGroup>

    <Import Project="$(BuildPropertyFile)"
            Condition="Exists('$(BuildPropertyFile)') AND '$(ExistsSettings)' != 'true' " />
    
    <PropertyGroup>
        <!-- Product & Company information -->
        <ProductName Condition=" '$(ProductName)' == '' ">Apollo</ProductName>
    
        <!-- Build flags -->
        <ShouldDisplayDebugLog Condition=" '$(ShouldDisplayDebugLog)' == '' ">false</ShouldDisplayDebugLog>
        <ShouldExecute Condition=" '$(ShouldExecute)' == '' ">true</ShouldExecute>
        
        <!-- Directories -->
        <DirWorkspace Condition=" '$(DirWorkspace)' == '' ">$([System.IO.Path]::GetDirectoryName('$(BuildPropertyFile)'))</DirWorkspace>
        <DirBuild Condition=" '$(DirBuild)' == '' ">$(DirWorkspace)\build</DirBuild>
        <DirBuildLogs Condition=" '$(DirBuildLogs)' == '' ">$(DirBuild)\logs</DirBuildLogs>
        <DirBuildTemp Condition=" '$(DirBuildTemp)' == '' ">$(DirBuild)\temp</DirBuildTemp>
        <DirPackages Condition=" '$(DirPackages)' == '' ">$(DirWorkspace)\packages</DirPackages>
        <DirSrc Condition=" '$(DirSrc)' == '' ">$(DirWorkspace)\src</DirSrc>
        <DirTemplates Condition=" '$(DirTemplates)' == '' ">$(DirWorkspace)\templates</DirTemplates>
        
        <!-- nBuildKit directories -->
        <DirMsBuildExtensions Condition=" '$(DirMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirMsBuildExtensions>
        <DirMsBuildShared Condition=" '$(DirMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirMsBuildShared>
        
        <!-- Files -->
        <FileTemplateSourceMonitor Condition=" '$(FileTemplateSourceMonitor)' == '' ">$(DirTemplates)\sourcemonitor.xml.in</FileTemplateSourceMonitor>
        <FileReportSourceMonitor Condition=" '$(FileReportSourceMonitor)' == '' ">$(DirBuildLogs)\sourcemonitor.xml</FileReportSourceMonitor>
    </PropertyGroup>
    
    <Import Project="$(DirMsBuildShared)\shared.templatetokens.msbuild" 
            Condition="Exists('$(DirMsBuildShared)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' " />
    
    <Import Project="$(DirMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\SearchPackagesDirectoryForToolPath.msbuild') AND '$(ExistsExtensionsSearchPackagesDirectoryForToolPath)' != 'true' " />
    <Import Project="$(DirMsBuildExtensions)\SourceMonitor.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\SourceMonitor.msbuild') AND '$(ExistsExtensionsSourceMonitor)' != 'true' "/>
    <Import Project="$(DirMsBuildExtensions)\SourceMonitorOutputToCsv.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\SourceMonitorOutputToCsv.msbuild') AND '$(ExistsExtensionsSourceMonitorOutputToCsv)' != 'true' "/>
    <Import Project="$(DirMsBuildExtensions)\TemplateFile.msbuild"
            Condition="Exists('$(DirMsBuildExtensions)\TemplateFile.msbuild') AND '$(ExistsExtensionsTemplateFile)' != 'true' "/>
    <Import Project="$(DirMsBuildExtensions)\TemplateText.msbuild" 
            Condition="Exists('$(DirMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' " />
            
    <Target Name="nBuildKit_Analyze_Source_SourceMonitor_Run" 
            DependsOnTargets="_nBuildKit_Analyze_Source_SourceMonitor_DisplayInfo">
        <CallTarget Targets="_nBuildKit_Analyze_Source_SourceMonitor_Analyze" />
    </Target>
    
    <!-- Display info -->
    <Target Name="_nBuildKit_Analyze_Source_SourceMonitor_DisplayInfo" 
            DependsOnTargets="_nBuildKit_Analyze_Source_SourceMonitor_DebugLog">
        <Message Text="Running SourceMonitor ..." />
    </Target>
    
    <Target Name="_nBuildKit_Analyze_Source_SourceMonitor_DebugLog" 
            Condition="$(ShouldDisplayDebugLog)" 
            DependsOnTargets="_nBuildKit_Analyze_Source_SourceMonitor_ReplaceBuildTemplates">
        <Message Text="Project directory structure:" />
        <Message Text="The workspace is located at:                                      $(DirWorkspace)" />
        <Message Text="The directory containing the build output is located at:          $(DirBuild)" />
        <Message Text="The directory containing the build logs is located at:            $(DirBuildLogs)" />
        <Message Text="The directory containing the temporary build files is located at: $(DirBuildTemp)" />
        <Message Text="The directory containing the NuGet packages is located at:        $(DirPackages)" />
        <Message Text="The directory containing the source code is located at:           $(DirSrc)" />
        <Message Text="The directory containing the template files is located at:        $(DirTemplates)" />
        <Message Text="The directory containing the nBuildKit scripts is located at:     $(DirMsBuildExtensions)" />
        <Message Text=" " />
        
        <Message Text="The SourceMonitor template file is located at: $(FileTemplateSourceMonitor)" />
        <Message Text="The SourceMonitor report file is located at:   $(FileReportSourceMonitorExpanded)" />
        <Message Text=" " />
    </Target>
    
    <Target Name="_nBuildKit_Analyze_Source_SourceMonitor_ReplaceBuildTemplates" 
            DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize">
        <Message Text="Resolving build templates for: $(FileReportSourceMonitor)" />
        
        <TemplateText Template="$(FileReportSourceMonitor)"
                      Tokens="@(TemplateTokens)">
            <Output TaskParameter="Result" PropertyName="FileReportSourceMonitorExpanded" />
        </TemplateText>
    </Target>
    
    <PropertyGroup>
        <FileSourceMonitorExe>SourceMonitor.exe</FileSourceMonitorExe>
        <FileGeneratedSourceMonitor>$(DirBuildTemp)\sourcemonitor.xml</FileGeneratedSourceMonitor>
        <Now>$([System.DateTime]::Now.ToString("yyyy-MM-ddTHH:mm:ss"))</Now>
    </PropertyGroup>
    <Target Name="_nBuildKit_Analyze_Source_SourceMonitor_Analyze"
            DependsOnTargets="_nBuildKit_Analyze_Source_SourceMonitor_ReplaceBuildTemplates">
        <Error Text="The packages directory does not exist. Cannot search for the SourceMonitor executable."
               Condition="!Exists('$(DirPackages)') AND '$(ShouldExecute)' == 'true' "/>
        <Error Text="The SourceMonitor template file does not exist. Cannot execute source code analysis."
               Condition="!Exists('$(FileTemplateSourceMonitor)') AND '$(ShouldExecute)' == 'true' "/>
        
        <MakeDir Directories="$(DirBuildTemp)" Condition="!Exists('$(DirBuildTemp)') AND  '$(ShouldExecute)' == 'true' " />
        <MakeDir Directories="$(DirBuildLogs)" Condition="!Exists('$(DirBuildLogs)') AND  '$(ShouldExecute)' == 'true' " />
    
        <SearchPackagesDirectoryForToolPath PackagesDir="$(DirPackages)" 
                                            FileToLocate="$(FileSourceMonitorExe)"
                                            Condition=" '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="Path" PropertyName="PathSourceMonitorExe" />
        </SearchPackagesDirectoryForToolPath>
        <Error Text="Could not locate the SourceMonitor executable path. Cannot execute source code analysis."
               Condition="!Exists('$(PathSourceMonitorExe)') AND '$(ShouldExecute)' == 'true' "/>
    
        <ItemGroup>
            <TemplateTokens Include="ProjectFileName">
                <ReplacementValue>$(DirBuildTemp)\sourcemonitor.smp</ReplacementValue>
            </TemplateTokens>
            <TemplateTokens Include="FileOutputSourceMonitor">
                <ReplacementValue>$(FileReportSourceMonitorExpanded)</ReplacementValue>
            </TemplateTokens>
        </ItemGroup>
        <TemplateFile Template="$(FileTemplateSourceMonitor)" 
                      OutputFileName="$(FileGeneratedSourceMonitor)" 
                      Tokens="@(TemplateTokens)" 
                      Condition=" '$(ShouldExecute)' == 'true' "/>
    
        <SourceMonitor SourceMonitorExe="$(PathSourceMonitorExe)"
                       ConfigFile="$(FileGeneratedSourceMonitor)" 
                       Condition=" '$(ShouldExecute)' == 'true' "/>
                       
        <SourceMonitorOutputToCsv ProjectName="$(ProductName)"
                                  InputFile="$(FileReportSourceMonitorExpanded)"
                                  OutputPath="$(DirBuildLogs)" 
                                  Condition="Exists('$(FileReportSourceMonitorExpanded)') AND '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>