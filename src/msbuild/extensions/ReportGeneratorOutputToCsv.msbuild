<!-- 
     Copyright 2013 nBuildKit. Licensed under the Apache License, Version 2.0.
-->

<Project xmlns='http://schemas.microsoft.com/developer/msbuild/2003' 
         ToolsVersion="4.0">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsExtensionsReportGeneratorOutputToCsv>true</ExistsExtensionsReportGeneratorOutputToCsv>
    </PropertyGroup>
    
    <UsingTask TaskName="ReportGeneratorOutputToCsv" 
               TaskFactory="CodeTaskFactory" 
               AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll">
        <ParameterGroup>
            <InputFile ParameterType="System.String" Required="true" />
            <OutputFile ParameterType="System.String" Required="true" />
        </ParameterGroup>
        <Task>
            <Reference Include="System.Xml" />
            <Reference Include="System.Xml.Linq" />
            <Code Type="Fragment" Language="cs">
                <![CDATA[
                    var doc = System.Xml.Linq.XDocument.Load(InputFile);
                    var metrics = (from node in doc
                                      .Element("CoverageReport")
                                      .Element("Assemblies")
                                      .Descendants("Assembly")
                                   select new
                                   {
                                       Name = node.Attribute("name").Value,
                                       Coverage = node.Attribute("coverage").Value,
                                   }).ToList();

                    {
                        var builder = new System.Text.StringBuilder();
                        var line = new System.Text.StringBuilder();
                        foreach (var item in metrics)
                        {
                            if (line.Length > 0)
                            {
                                line.Append(",");
                            }

                            line.Append(
                                string.Format(
                                    System.Globalization.CultureInfo.InvariantCulture,
                                    "\"{0}\"",
                                    item.Name));
                        }

                        builder.AppendLine(line.ToString());
                        line = new System.Text.StringBuilder();
                        foreach (var item in metrics)
                        {
                            if (line.Length > 0)
                            {
                                line.Append(",");
                            }

                            line.Append(
                                string.Format(
                                    System.Globalization.CultureInfo.InvariantCulture,
                                    "{0}",
                                    item.Coverage));
                        }

                        builder.AppendLine(line.ToString());
                        using (var writer = new System.IO.StreamWriter(OutputFile))
                        {
                            writer.Write(builder.ToString());
                        }
                    }
                ]]>  
            </Code>
        </Task>
    </UsingTask>
</Project>