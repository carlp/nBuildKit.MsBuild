<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="11.0"
         DefaultTargets="nBuildKit_Shared_Prepare_VcsMergeToTarget_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <ExistsSharedPrepareVcsMergeToTarget>true</ExistsSharedPrepareVcsMergeToTarget>
    </PropertyGroup>

    <Import Project="$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props"
            Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props') AND '$(ExistsSharedImportSharedSettings)' != 'true' " />

    <Import Project="$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GetSemanticVersionFromFile.msbuild') AND '$(ExistsExtensionsGetSemanticVersionFromFile)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\GitCheckout.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GitCheckout.msbuild') AND '$(ExistsExtensionsGitCheckout)' != 'true' " />
    <Import Project="$(DirNBuildKitMsBuildExtensions)\GitInfo.msbuild"
            Condition="Exists('$(DirNBuildKitMsBuildExtensions)\GitInfo.msbuild') AND '$(ExistsExtensionsGitInfo)' != 'true' " />

    <Target Name="nBuildKit_Shared_Prepare_VcsMergeToTarget_Run"
            DependsOnTargets="_nBuildKit_Shared_Prepare_VcsMergeToTarget_DisplayInfo"
            Condition=" '@(BranchMergeTarget)' != '' ">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_WriteInfo_Prepare" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_Merge" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_WriteInfo_Finalize" />
    </Target>

    <!-- Display info -->
    <Target Name="_nBuildKit_Shared_Prepare_VcsMergeToTarget_DisplayInfo"
            DependsOnTargets="_nBuildKit_Shared_Prepare_VcsMergeToTarget_DebugLog">
        <Message Text="Merging current changes to selected target branch ..."
                 Importance="normal"/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_VcsMergeToTarget_DebugLog" Condition="$(ShouldDisplayDebugLog)">
        <Message Text="Project directory structure:"
                 Importance="low"/>
        <Message Text="The workspace is located at:                                       $(DirWorkspace)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)"
                 Importance="low"/>
        <Message Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="The VCS merge file is located at:                                  $(FileVcsMergeInfo)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="GIT command line executable is located at:                         $(ToolsExternalGitPath)"
                 Importance="low"/>
        <Message Text=" "
                 Importance="low"/>

        <Message Text="The current workspace is a GIT workspace"
                 Importance="low"
                 Condition=" '$(IsGitWorkspace)' == 'true' " />
        <Warning Text="The current workspace does not have any identifying VCS information. No VCS info file will be created"
                 Condition=" '$(IsGitWorkspace)' != 'true' " />
        <Message Text=" "
                 Importance="low"/>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_WriteInfo_Prepare"
            Condition=" '$(IsGitWorkspace)' == 'True' AND '$(IsOnBuildServer)' == 'True' " >
        <CreateProperty Value="$([System.IO.Path]::GetDirectoryName('$(FileVcsMergeInfo)'))">
            <Output TaskParameter="Value" PropertyName="DirToCreate" />
        </CreateProperty>
        <MakeDir Directories="$(DirToCreate)"
                 Condition="!Exists('$(DirToCreate)') AND '$(ShouldExecute)' == 'true' " />

        <ItemGroup>
            <GitMergeItemsPrepare Include="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;" />
            <GitMergeItemsPrepare Include="&lt;merge&gt;" />
            <GitMergeItemsPrepare Include="    &lt;origin branch=&quot;$(BranchGitExpected)&quot; revision=&quot;$(GitRevNoExpected)&quot; /&gt;" />
            <GitMergeItemsPrepare Include="    &lt;targets&gt;" />
        </ItemGroup>
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_Merge"
            Condition=" '$(IsGitWorkspace)' == 'True' AND '$(IsOnBuildServer)' == 'True' "
            Outputs="%(BranchMergeTarget.Identity)">
        <Error Text="No GIT executable defined. Will not be able to gather the VCS information."
               Condition=" '$(ToolsExternalGitPath)' == '' AND '$(ShouldExecute)' == 'true' " />

        <Message Text="Checking out merge target branch: %(BranchMergeTarget.Identity) ..." />
        <GitCheckout GitExecutablePath="$(ToolsExternalGitPath)"
                     Branch="%(BranchMergeTarget.Identity)" />

        <GitInfo GitExecutablePath="$(ToolsExternalGitPath)"
                 WorkingDirectory="$(DirWorkspace)"
                 Condition=" '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="CurrentBranch" PropertyName="TargetGitBranch" />
            <Output TaskParameter="CurrentRevision" PropertyName="GitRevNoCurrentBranch" />
        </GitInfo>
        <Message Text="Target branch: $(TargetGitBranch)" />
        <Message Text="Target revision: $(TargetGitRevision)" />

        <Message Text="Merging changes from branch $(BranchGitExpected) to branch  %(BranchMergeTarget.Identity) ..." />
        <Exec Command="$(ToolsExternalGitPath) merge $(BranchGitExpected) --no-ff --commit --no-edit --no-progress --verbose"
              Condition=" '$(BranchGitExpected)' != '%(BranchMergeTarget.Identity)' " />

        <ItemGroup>
            <GitMergeItems Include="        &lt;target branch=&quot;%(BranchMergeTarget.Identity)&quot; revision=&quot;$(GitRevNoCurrentBranch)&quot; /&gt;" />
        </ItemGroup>

        <GitInfo GitExecutablePath="$(ToolsExternalGitPath)"
                 WorkingDirectory="$(DirWorkspace)"
                 Condition=" '$(ShouldExecute)' == 'true' ">
            <Output TaskParameter="CurrentBranch" PropertyName="PostMergeBranch" />
            <Output TaskParameter="CurrentRevision" PropertyName="PostMergeRevision" />
        </GitInfo>
        <Message Text="Post-merge branch: $(PostMergeBranch)" />
        <Message Text="Post-merge revision: $(PostMergeRevision)" />
    </Target>

    <Target Name="_nBuildKit_Shared_Prepare_VcsMergeToTarget_Git_WriteInfo_Finalize"
            Condition=" '$(IsGitWorkspace)' == 'True' AND '$(IsOnBuildServer)' == 'True' " >

        <ItemGroup>
            <GitMergeItemsFinalize Include="    &lt;/targets&gt;" />
            <GitMergeItemsFinalize Include="&lt;/merge&gt;" />
        </ItemGroup>

        <WriteLinesToFile File="$(FileVcsMergeInfo)"
                          Lines="@(GitMergeItemsPrepare)"
                          Overwrite="true"
                          Condition=" '$(ShouldExecute)' == 'true' "/>

        <WriteLinesToFile File="$(FileVcsMergeInfo)"
                          Lines="@(GitMergeItems)"
                          Overwrite="false"
                          Condition=" '$(ShouldExecute)' == 'true' "/>

        <WriteLinesToFile File="$(FileVcsMergeInfo)"
                          Lines="@(GitMergeItemsFinalize)"
                          Overwrite="false"
                          Condition=" '$(ShouldExecute)' == 'true' "/>
    </Target>
 </Project>