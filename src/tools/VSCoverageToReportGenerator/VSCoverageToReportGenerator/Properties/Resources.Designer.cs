//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nBuildKit.Tools.VSCoverageToReportGenerator.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("nBuildKit.Tools.VSCoverageToReportGenerator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prints out the command line options..
        /// </summary>
        internal static string CommandLine_Options_Help_Description {
            get {
                return ResourceManager.GetString("CommandLine_Options_Help_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ?|h|help.
        /// </summary>
        internal static string CommandLine_Options_Help_Key {
            get {
                return ResourceManager.GetString("CommandLine_Options_Help_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the directory containing the binaries that were used to generate the coverage files. To specify multiple directories specify the parameter multiple times..
        /// </summary>
        internal static string CommandLine_Param_BinDirectory_Description {
            get {
                return ResourceManager.GetString("CommandLine_Param_BinDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to b=|BinDirectory=.
        /// </summary>
        internal static string CommandLine_Param_BinDirectory_Key {
            get {
                return ResourceManager.GetString("CommandLine_Param_BinDirectory_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the file that contains the VsTest code coverage data..
        /// </summary>
        internal static string CommandLine_Param_InputFile_Description {
            get {
                return ResourceManager.GetString("CommandLine_Param_InputFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to i=|InputFile=.
        /// </summary>
        internal static string CommandLine_Param_InputFile_Key {
            get {
                return ResourceManager.GetString("CommandLine_Param_InputFile_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the file to which the converted coverage data should be written..
        /// </summary>
        internal static string CommandLine_Param_OutputFile_Description {
            get {
                return ResourceManager.GetString("CommandLine_Param_OutputFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to o=|OutputFile=.
        /// </summary>
        internal static string CommandLine_Param_OutputFile_Key {
            get {
                return ResourceManager.GetString("CommandLine_Param_OutputFile_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the visual studio directory for the version that was used to generate the code coverage files..
        /// </summary>
        internal static string CommandLine_Param_VisualStudioDirectory_Description {
            get {
                return ResourceManager.GetString("CommandLine_Param_VisualStudioDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to v=|VisualStudioDirectory=.
        /// </summary>
        internal static string CommandLine_Param_VisualStudioDirectory_Key {
            get {
                return ResourceManager.GetString("CommandLine_Param_VisualStudioDirectory_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nBuildKit VSCoverageToReportGenerator ({0}).
        /// </summary>
        internal static string Header_ApplicationAndVersion {
            get {
                return ResourceManager.GetString("Header_ApplicationAndVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         {0} (version: {1}). For more information see: {2}.
        /// </summary>
        internal static string Header_OtherPackages_IdAndLicense {
            get {
                return ResourceManager.GetString("Header_OtherPackages_IdAndLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application makes use of the following open source software:.
        /// </summary>
        internal static string Header_OtherPackages_Intro {
            get {
                return ResourceManager.GetString("Header_OtherPackages_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usage: VSCoverageToReportGenerator.exe [OPTIONS}.
        /// </summary>
        internal static string Help_Usage_Intro {
            get {
                return ResourceManager.GetString("Help_Usage_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given binary directory does not exist. Expected it to be at {0} but no directory was found..
        /// </summary>
        internal static string Output_Error_BinDirectoryDoesNotExist_WithDirectory {
            get {
                return ResourceManager.GetString("Output_Error_BinDirectoryDoesNotExist_WithDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given input file does not exist. Expected it to be at {0} but no file was found..
        /// </summary>
        internal static string Output_Error_InputFileDoesNotExist_WithFile {
            get {
                return ResourceManager.GetString("Output_Error_InputFileDoesNotExist_WithFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse the input parameters. Exception was: {0}.
        /// </summary>
        internal static string Output_Error_InvalidInputParameters_WithException {
            get {
                return ResourceManager.GetString("Output_Error_InvalidInputParameters_WithException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the input file has to be provided..
        /// </summary>
        internal static string Output_Error_MissingValues_InputFile {
            get {
                return ResourceManager.GetString("Output_Error_MissingValues_InputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one path to a directory containing the binaries that were used when generating the coverage files has to be specified..
        /// </summary>
        internal static string Output_Error_MissingValues_NoBinDirectorySpecified {
            get {
                return ResourceManager.GetString("Output_Error_MissingValues_NoBinDirectorySpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the output file has to be provided..
        /// </summary>
        internal static string Output_Error_MissingValues_OutputFile {
            get {
                return ResourceManager.GetString("Output_Error_MissingValues_OutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full path to the Visual Studio directory has to be provided..
        /// </summary>
        internal static string Output_Error_MissingValues_VisualStudioDirectory {
            get {
                return ResourceManager.GetString("Output_Error_MissingValues_VisualStudioDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unhandled exception occurred while converting the coverage report. Exception was: {0}.
        /// </summary>
        internal static string Output_Error_UnhandledException_WithException {
            get {
                return ResourceManager.GetString("Output_Error_UnhandledException_WithException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given Visual Studio directory does not exist. Expected it to be at {0} but no directory was found..
        /// </summary>
        internal static string Output_Error_VisualStudioDirectoryDoesNotExist_WithDirectory {
            get {
                return ResourceManager.GetString("Output_Error_VisualStudioDirectoryDoesNotExist_WithDirectory", resourceCulture);
            }
        }
    }
}
