<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="_nBuildKit_Executors_Test_Execute"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <!-- Note the current script is not meant to be imported! -->
        <ExistsTestExecute>true</ExistsTestExecute>

        <!-- Don't load the template tokens, this script doesn't need them -->
        <LoadTemplateTokens>false</LoadTemplateTokens>
    </PropertyGroup>

    <Import
        Condition="Exists('$(FileTestImports)') AND '$(ExistsTestImports)' != 'true' "
        Project="$(FileTestImports)" />

    <Import
        Condition="Exists('$(FileNBuildKitExtensionsImport)') AND '$(ExistsNBuildKitExtensions)' != 'true' "
        Project="$(FileNBuildKitExtensionsImport)" />

    <!--
        Collect the standard paths for injection into nBuildKit.
    -->
    <PropertyGroup>
        <Locations>
            DirNBuildKitMsBuildActions=$(DirNBuildKitMsBuildActions);
            DirWorkspace=$(DirWorkspace);
            DirUserSettings=$(DirUserSettings);
        </Locations>
        <Files>
            FileNBuildKitExtensionsAssembly=$(FileNBuildKitExtensionsAssembly);
            FileNBuildKitExtensionsImport=$(FileNBuildKitExtensionsImport);
            FileSharedImports=$(FileSharedImports);
            FileBuildImports=$(FileBuildImports);
            FileTestImports=$(FileTestImports);
            FileDeployImports=$(FileDeployImports);
        </Files>
        <DefaultProperties>
        </DefaultProperties>
    </PropertyGroup>

    <UsingTask TaskName="NBuildKit.MsBuild.Tasks.InvokeSteps" AssemblyFile="$(FileNBuildKitExtensionsAssembly)" />
    <Target
        Condition=" '@(TestStepsToExecute)' != ''"
        Name="_nBuildKit_Executors_Test_Execute">

        <CreateItem Include="$(GroupsToExecute.Replace(',', ';').ToLower().Split(';'))">
            <Output
                ItemName="ExecutionGroupsFromUser"
                TaskParameter="Include" />
        </CreateItem>

        <InvokeSteps
            FailOnPreStepFailure="$(FailTestOnPreStepFailure)"
            FailOnPostStepFailure="$(FailTestOnPostStepFailure)"
            FailureSteps="@(TestFailureStepsToExecute)"
            GroupsToExecute="@(ExecutionGroupsFromUser)"
            PreSteps="@(TestPreStepsToExecute)"
            PostSteps="@(TestPostStepsToExecute)"
            Projects="@(TestStepsToExecute)"
            Properties="$(Locations);$(Files);$(DefaultProperties)"
            StepMetadata="@(AvailableStepMetadata)"
            StopOnFirstFailure="true"
            StopOnPreStepFailure="$(StopTestOnPreStepFailure)"
            StopOnPostStepFailure="$(StopTestOnPostStepFailure)"
            ToolsVersion="$(MSBuildToolsVersion)"
            WorkingDirectory="$(DirWorkspace)" />
    </Target>
</Project>
