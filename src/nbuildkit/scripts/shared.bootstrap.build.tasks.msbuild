<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Shared_Bootstrap_Build_Tasks_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBootstrapBuildTasks>true</ExistsBootstrapBuildTasks>

        <!-- Don't load the template tokens, this script doesn't need them -->
        <LoadTemplateTokens>false</LoadTemplateTokens>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props" />

    <Target
        DependsOnTargets="_nBuildKit_Shared_Bootstrap_Build_Tasks_DisplayInfo"
        Name="nBuildKit_Shared_Bootstrap_Build_Tasks_Run">
        <CallTarget Targets="_nBuildKit_Shared_Bootstrap_Build_Tasks_Execute" />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Shared_Bootstrap_Build_Tasks_DebugLog">
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the build logs is located at:             $(DirBuildLogs)" />
        <Message
            Importance="low"
            Text="The directory containing the NuGet packages is located at:         $(DirPackages)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="NuGet command line executable is located at:                       $(ToolsExternalNuGetPath)" />
        <Message
            Importance="low"
            Text=" " />
    </Target>

    <Target
        DependsOnTargets="_nBuildKit_Shared_Bootstrap_Build_Tasks_DebugLog"
        Name="_nBuildKit_Shared_Bootstrap_Build_Tasks_DisplayInfo">
        <Message
            Importance="normal"
            Text="Building Visual Studio project that contains the MsBuild Tasks ..." />
    </Target>

    <Target
        Condition=" '@(MsBuildTasksProjectsToBuild)' != '' "
        Name="_nBuildKit_Shared_Bootstrap_Build_Tasks_Execute"
        Outputs="%(MsBuildTasksProjectsToBuild.Identity)">
        <CreateProperty Value="%(MsBuildTasksProjectsToBuild.FullPath)">
            <Output
                PropertyName="FileMsBuildTasksProject"
                TaskParameter="Value" />
        </CreateProperty>
        <Error
            Condition=" '$(ToolsExternalNuGetPath)' == '' "
            Text="No NuGet executable defined. Will not be able to restore the packages." />
        <Error
            Condition="!Exists('$(FileMsBuildTasksProject)') "
            Text="Expected $(FileMsBuildTasksProject) to point to a valid path but it does not." />

        <Message
            Importance="normal"
            Text="Building $(FileMsBuildTasksProject) for targets = %(MsBuildTasksProjectsToBuild.Targets) with: Configuration = %(MsBuildTasksProjectsToBuild.Configuration) and Platform = %(MsBuildTasksProjectsToBuild.Platform) ..." />

        <CreateProperty Value="$([System.IO.Path]::Combine('%(MsBuildTasksProjectsToBuild.RootDir)%(MsBuildTasksProjectsToBuild.Directory)', 'packages.config'))">
            <Output
                PropertyName="FilePackages"
                TaskParameter="Value" />
        </CreateProperty>

        <Exec
            Command="&quot;$(ToolsExternalNuGetPath)&quot; restore &quot;$(FilePackages)&quot; -OutputDirectory &quot;$(DirPackages)&quot; -NonInteractive -Verbosity detailed -NoCache @(NuGetSources-> '-Source &quot;%(Identity)&quot;', ' ')"
            Condition="Exists('$(FilePackages)') "
            IgnoreStandardErrorWarningFormat="true" />

        <MSBuild
            BuildInParallel="False"
            Projects="$(FileMsBuildTasksProject)"
            Properties="Configuration=%(MsBuildTasksProjectsToBuild.Configuration);Platform=%(MsBuildTasksProjectsToBuild.Platform);%(MsBuildTasksProjectsToBuild.Properties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="False"
            TargetAndPropertyListSeparators=""
            Targets="%(MsBuildTasksProjectsToBuild.Targets)"
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="True"
            UseResultsCache="True">
            <Output
                ItemName="GeneratedAssemblies"
                TaskParameter="TargetOutputs" />
        </MSBuild>

        <!--
            The compile process also drops the MsBuild binaries. We don't really want those because they
            may cause DLL loading issues, so we'll nuke em
        -->
        <ItemGroup>
            <BootstrapFilesToDelete Include="$(DirBuildBootstrap)\Microsoft.Build*.dll" />
        </ItemGroup>
        <Delete Files="@(BootstrapFilesToDelete)" />
    </Target>
 </Project>