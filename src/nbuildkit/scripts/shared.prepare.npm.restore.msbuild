<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Shared_Prepare_Npm_Restore_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedPrepareNpmRestore>true</ExistsSharedPrepareNpmRestore>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props') AND '$(ExistsSharedImportSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props" />

    <Import
        Condition="Exists('$(FileExtensionsImport)') AND '$(ExistsNBuildKitExtensions)' != 'true' "
        Project="$(FileExtensionsImport)" />

    <Target
        DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo"
        Name="nBuildKit_Shared_Prepare_Npm_Restore_Run">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths" />
        <CallTarget Targets="_nBuildKit_Shared_Prepare_Npm_Restore_Packages" />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Shared_Prepare_Npm_Restore_DebugLog">
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="Npm command line executable is located at:                         $(ToolsExternalNpmPath)" />
    </Target>

    <!-- Display info -->
    <Target
        DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DebugLog"
        Name="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo">
        <Message
            Importance="normal"
            Text="Restoring NPM packages ..." />
    </Target>

    <Target
        Name="_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths">
        <NuGetInstall
            Condition=" '$(ToolsExternalNodeJsPath)' == 'UNDEFINED' "
            NuGetExecutablePath="$(ToolsExternalNuGetPath)"
            PackageDirectory="$(DirPackages)"
            PackageName="Node.js"
            PackageVersion="$(ToolsExternalNodeJsVersion)"
            Sources="@(NuGetSources)" />
        <SearchPackagesDirectoryForToolPath
            Condition=" '$(ToolsExternalNodeJsPath)' == 'UNDEFINED' "
            FileToLocate="node.exe"
            PackagesDirectory="$(DirPackages)">
            <Output
                PropertyName="ToolsExternalNodeJsPath"
                TaskParameter="Path" />
        </SearchPackagesDirectoryForToolPath>

        <GetToolFullPath
            Condition=" '$(ToolsExternalNodeJsPath)' != 'UNDEFINED' "
            Tool="$(ToolsExternalNodeJsPath)">
            <Output
                PropertyName="ToolsExternalNodeJsPath"
                TaskParameter="Path" />
        </GetToolFullPath>
        <Message
            Condition="Exists('$(ToolsExternalNodeJsPath)') AND '$(ShouldExecute)' == 'true' "
            Importance="low"
            Text="The node.js executable was found at: $(ToolsExternalNodeJsPath)" />

        <Error
            Condition="!Exists('$(ToolsExternalNodeJsPath)') AND '$(ShouldExecute)' == 'true' "
            Text="Could not locate the Node.js executable path. Cannot execute any of the node.js tools." />

        <NuGetInstall
            Condition=" '$(ToolsExternalPythonPath)' == 'UNDEFINED' "
            NuGetExecutablePath="$(ToolsExternalNuGetPath)"
            PackageDirectory="$(DirPackages)"
            PackageName="Python.Runtime"
            PackageVersion="$(ToolsExternalPythonVersion)"
            Sources="@(NuGetSources)" />
        <SearchPackagesDirectoryForToolPath
            Condition=" '$(ToolsExternalPythonPath)' == 'UNDEFINED' "
            FileToLocate="python.exe"
            PackagesDirectory="$(DirPackages)">
            <Output
                PropertyName="ToolsExternalPythonPath"
                TaskParameter="Path" />
        </SearchPackagesDirectoryForToolPath>
        <GetToolFullPath
            Condition=" '$(ToolsExternalPythonPath)' != 'UNDEFINED' "
            Tool="$(ToolsExternalPythonPath)">
            <Output
                PropertyName="ToolsExternalPythonPath"
                TaskParameter="Path" />
        </GetToolFullPath>
        <Message
            Condition="Exists('$(ToolsExternalPythonPath)') AND '$(ShouldExecute)' == 'true' "
            Importance="low"
            Text="The python executable was found at: $(ToolsExternalPythonPath)" />

        <Warning
            Condition="!Exists('$(ToolsExternalPythonPath)') AND '$(ShouldExecute)' == 'true' "
            Text="Could not locate the python executable path. It is not possible to invoke python scripts. This may fail the NPM restore process." />

        <NuGetInstall
            Condition=" '$(ToolsExternalNpmPath)' == 'UNDEFINED' "
            NuGetExecutablePath="$(ToolsExternalNuGetPath)"
            PackageDirectory="$(DirPackages)"
            PackageName="Npm"
            PackageVersion="$(ToolsExternalNpmVersion)"
            Sources="@(NuGetSources)" />
        <SearchPackagesDirectoryForToolPath
            Condition=" '$(ToolsExternalNpmPath)' == 'UNDEFINED' "
            FileToLocate="npm-cli.js"
            PackagesDirectory="$(DirPackages)">
            <Output
                PropertyName="ToolsExternalNpmPath"
                TaskParameter="Path" />
        </SearchPackagesDirectoryForToolPath>
        <GetToolFullPath
            Condition=" '$(ToolsExternalNpmPath)' != 'UNDEFINED' "
            Tool="$(ToolsExternalNpmPath)">
            <Output
                PropertyName="ToolsExternalNpmPath"
                TaskParameter="Path" />
        </GetToolFullPath>
        <Message
            Condition="Exists('$(ToolsExternalNpmPath)') AND '$(ShouldExecute)' == 'true' "
            Importance="low"
            Text="The npm executable was found at: $(ToolsExternalNpmPath)" />

        <Error
            Condition="!Exists('$(ToolsExternalNpmPath)') AND '$(ShouldExecute)' == 'true' "
            Text="Could not locate the Npm executable path. Cannot restore the Node.js packages." />
    </Target>

    <Target
        DependsOnTargets="_nBuildKit_Shared_Prepare_Npm_Restore_DisplayInfo;_nBuildKit_Shared_Prepare_Npm_Restore_GetToolPaths"
        Name="_nBuildKit_Shared_Prepare_Npm_Restore_Packages">
        <Error
            Condition=" '$(ToolsExternalNpmPath)' == '' AND '$(ShouldExecute)' == 'true' "
            Text="No NPM executable defined. Will not be able to restore the packages." />

        <Message
            Condition=" '@(NpmPackageFiles)' == '' "
            Importance="low"
            Text="No NPM package configuration files found to restore packages from." />
        <ItemGroup>
            <AdditionalEnvironmentPaths Include="$([System.IO.Path]::GetDirectoryName('$(ToolsExternalPythonPath)'))" />
        </ItemGroup>
        <InvokeNodeTool
            AdditionalEnvironmentPaths="@(AdditionalEnvironmentPaths)"
            Arguments="install $([System.IO.Path]::GetDirectoryName('%(NpmPackageFiles.FullPath)'))"
            Condition=" '@(NpmPackageFiles)' != '' "
            IgnoreErrors="true"
            IgnoreExitCode="false"
            NodeExecutablePath="$(ToolsExternalNodeJsPath)"
            ToolPath="$(ToolsExternalNpmPath)"
            WorkingDirectory="%(NpmPackageFiles.RootDir)%(NpmPackageFiles.Directory)" />

        <!--
        <Exec
            Command="$(ToolsExternalNpmPath) install $([System.IO.Path]::GetDirectoryName('%(NpmPackageFiles.FullPath)'))"
            Condition=" '@(NpmPackageFiles)' != '' AND !$(ToolsExternalNpmPath.EndsWith('npm-cli.js')) "
            IgnoreExitCode="false"
            IgnoreStandardErrorWarningFormat="true"
            WorkingDirectory="%(NpmPackageFiles.RootDir)%(NpmPackageFiles.Directory)" />
        -->
    </Target>
 </Project>
