<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Build_Binaries_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildBinaries>true</ExistsBuildBinaries>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props" />

    <Import
        Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' "
        Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild" />

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildExtensions)\NuGetRestore.msbuild') AND '$(ExistsExtensionsNuGetRestore)' != 'true' "
        Project="$(DirNBuildKitMsBuildExtensions)\NuGetRestore.msbuild" />
    <Import
        Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' "
        Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild" />

    <Target
        DependsOnTargets="_nBuildKit_Build_Binaries_DisplayInfo"
        Name="nBuildKit_Build_Binaries_Run">
        <CallTarget
            Targets="_nBuildKit_Build_Binaries_Execute" />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Build_Binaries_DebugLog">
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the build logs is located at:             $(DirBuildLogs)" />
        <Message
            Importance="low"
            Text="The directory containing the NuGet packages is located at:         $(DirPackages)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="NuGet command line executable is located at:                       $(ToolsExternalNuGetPath)" />
        <Message
            Importance="low"
            Text=" " />
    </Target>

    <Target
        DependsOnTargets="_nBuildKit_Build_Binaries_DebugLog"
        Name="_nBuildKit_Build_Binaries_DisplayInfo">
        <Message
            Importance="normal"
            Text="Building the Visual Studio solutions ..." />
    </Target>

    <Target
        Condition=" '@(SolutionsToBuild)' != '' "
        DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize"
        Name="_nBuildKit_Build_Binaries_Execute"
        Outputs="%(SolutionsToBuild.Identity)">
        <TemplateText
            Template="%(SolutionsToBuild.FullPath)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="FileSln"
                TaskParameter="Result" />
        </TemplateText>

        <Error
            Condition=" '$(ToolsExternalNuGetPath)' == '' AND '$(ShouldExecute)' == 'true' "
            Text="No NuGet executable defined. Will not be able to restore the packages." />
        <Error
            Condition="!Exists('$(FileSln)') AND  '$(ShouldExecute)' == 'true' "
            Text="Expected $(FileSln) to point to a valid path but it does not." />

        <Message
            Importance="normal"
            Text="Building $(FileSln) for targets = %(SolutionsToBuild.Targets) with: Configuration = %(SolutionsToBuild.Configuration) and Platform = %(SolutionsToBuild.Platform) ..." />

        <CreateProperty Value="$([System.IO.Path]::GetExtension('$(FileSln)'))">
            <Output
                PropertyName="FileExtension"
                TaskParameter="Value" />
        </CreateProperty>
        <NuGetRestore
            Condition=" '$(FileExtension)' == '.sln' AND '$(ShouldExecute)' == 'true' "
            NuGetPath="$(ToolsExternalNuGetPath)"
            PackageDirectory="$(DirPackages)"
            PackageFile="$(FileSln)"
            Sources="@(NuGetSources)" />

        <MSBuild
            BuildInParallel="False"
            Projects="$(FileSln)"
            Properties="Configuration=%(SolutionsToBuild.Configuration);Platform=%(SolutionsToBuild.Platform);%(SolutionsToBuild.Properties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="False"
            TargetAndPropertyListSeparators=""
            Targets="%(SolutionsToBuild.Targets)"
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="True"
            UseResultsCache="True"
            Condition=" '$(ShouldExecute)' == 'true' ">
            <Output
                ItemName="GeneratedAssemblies"
                TaskParameter="TargetOutputs" />
        </MSBuild>

        <MakeDir
            Condition="!Exists('$(DirBuildLogs)') AND '$(ShouldExecute)' == 'true' "
            Directories="$(DirBuildLogs)" />

        <ItemGroup>
            <LogFiles
                Condition="Exists('%(GeneratedAssemblies.Identity)')"
                Include="$([System.IO.Path]::GetDirectoryName('%(GeneratedAssemblies.Identity)'))\*.CodeAnalysisLog.xml" />
        </ItemGroup>

        <Move
            Condition=" '$(ShouldExecute)' == 'true' "
            ContinueOnError="true"
            DestinationFolder="$(DirBuildLogs)"
            OverwriteReadOnlyFiles="true"
            SourceFiles="@(LogFiles)" />
    </Target>
 </Project>