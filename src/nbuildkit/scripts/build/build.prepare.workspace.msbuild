<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Build_Prepare_Workspace_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildPrepareWorkspace>true</ExistsBuildPrepareWorkspace>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props" />

        <CallTarget Targets="_nBuildKit_Build_Prepare_Workspace_Clean" />
    <Target
        DependsOnTargets="_nBuildKit_Build_Prepare_Workspace_DisplayInfo"
        Name="nBuildKit_Build_Prepare_Workspace_Run">
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Build_Prepare_Workspace_DebugLog">
        <Message
            Importance="low"
            Text="Configuration values:" />
        <Message
            Importance="low"
            Text="ShouldClean:             $(ShouldClean)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the deliverables is located at:           $(DirBuildDeploy)" />
        <Message
            Importance="low"
            Text="The directory containing the build logs is located at:             $(DirBuildLogs)" />
        <Message
            Importance="low"
            Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)" />
        <Message
            Importance="low"
            Text="The directory containing the NuGet packages is located at:         $(DirPackages)" />
        <Message
            Importance="low"
            Text="The directory containing the source code is located at:            $(DirSrc)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
    </Target>

    <!-- Display info -->
    <Target
        DependsOnTargets="_nBuildKit_Build_Prepare_Workspace_DebugLog"
        Name="_nBuildKit_Build_Prepare_Workspace_DisplayInfo">
        <Message
            Importance="normal"
            Text="Preparing workspace ..." />
    </Target>

    <!-- Clean -->
    <Target
        Condition="$(ShouldClean)"
        DependsOnTargets="_nBuildKit_Build_Prepare_Workspace_DisplayInfo"
        Name="_nBuildKit_Build_Prepare_Workspace_Clean">
        <!--
            We'll try to delete the directory but that may fail randomly because
            some file is being locked (by some other process). This could leads to a failing task, but ..
            the next task is run and then the delete command still executes (delayed
            by the OS).
        -->
        <!--
            Also make sure not to kill the 'DirUserConfiguration' folder because that contains the settings.props files
            that we are currently using.
        -->
        <ItemGroup>
            <BuildFilesToDelete
                Exclude="$(DirUserConfiguration)\**\*.*"
                Include="$(DirBuild)\**\*.*" />
        </ItemGroup>
        <Delete
            Condition=" '$(ShouldExecute)' == 'true' "
            ContinueOnError="True"
            Files="@(BuildFilesToDelete)" />

        <!--
            Delete all the known generated files. These may be part of the batch of files we just deleted if the user left the default values
            in place, otherwise they may be in different places in the system.
        -->
        <ItemGroup>
            <GeneratedFilesToDelete
                Condition="Exists('$(FileSemanticVersion)')"
                Include="$(FileSemanticVersion)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReleaseNotesShort)')"
                Include="$(FileReleaseNotesShort)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReleaseNotesFull)')"
                Include="$(FileReleaseNotesFull)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileVcsInfo)')"
                Include="$(FileVcsInfo)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReportMsTest)')"
                Include="$(FileReportMsTest)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReportOpenCoverXml)')"
                Include="$(FileReportOpenCoverXml)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReportOpenCoverCsv)')"
                Include="$(FileReportOpenCoverCsv)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReportMoma)')"
                Include="$(FileReportMoma)" />
            <GeneratedFilesToDelete
                Condition="Exists('$(FileReportFxCop)')"
                Include="$(FileReportFxCop)" />
            <GeneratedFilesToDelete
                Condition="Exists('%(BuildFilesToGenerate.FullPath)')"
                Include="%(BuildFilesToGenerate.FullPath)" />
        </ItemGroup>
        <Delete
            Condition=" '$(ShouldExecute)' == 'true' "
            ContinueOnError="True"
            Files="@(GeneratedFilesToDelete)" />

        <ItemGroup>
            <BuildDirectoriesToDelete
                Exclude="$(DirBuild);$(DirUserConfiguration)"
                Include="$([System.IO.Directory]::GetDirectories('$(DirBuild)', '*', System.IO.SearchOption.TopDirectoryOnly))" />
        </ItemGroup>
        <RemoveDir
            Condition=" '$(ShouldExecute)' == 'true' "
            ContinueOnError="True"
            Directories="@(BuildDirectoriesToDelete)" />
    </Target>
 </Project>