<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Build_Pack_Zip_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildPackZip>true</ExistsBuildPackZip>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props') AND '$(ExistsSharedImportBuildSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importbuildsharedsettings.props" />

    <Import
        Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' "
        Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild" />

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild') AND '$(ExistsExtensionsTemplateFile)' != 'true' "
        Project="$(DirNBuildKitMsBuildExtensions)\TemplateFile.msbuild" />
    <Import
        Condition="Exists('$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild') AND '$(ExistsExtensionsTemplateText)' != 'true' "
        Project="$(DirNBuildKitMsBuildExtensions)\TemplateText.msbuild" />
    <Import
        Condition="Exists('$(DirNBuildKitMsBuildExtensions)\Zip.msbuild') AND '$(ExistsExtensionsZip)' != 'true' "
        Project="$(DirNBuildKitMsBuildExtensions)\Zip.msbuild" />

    <Target
        DependsOnTargets="_nBuildKit_Build_Pack_Zip_DisplayInfo"
        Name="nBuildKit_Build_Pack_Zip_Run">
        <CallTarget Targets="_nBuildKit_Build_Pack_Zip_Pack" />
    </Target>

    <!-- Display info -->
    <Target
        DependsOnTargets="_nBuildKit_Build_Pack_Zip_DebugLog"
        Name="_nBuildKit_Build_Pack_Zip_DisplayInfo">
        <Message
            Importance="normal"
            Text="Packing binaries ..." />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Build_Pack_Zip_DebugLog">
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />
    </Target>

    <Target
        Condition=" '@(ArchivePackageSpecs)' != '' "
        DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize"
        Name="_nBuildKit_Build_Pack_Zip_Pack"
        Outputs="%(ArchivePackageSpecs.Identity)">
        <Message
            Importance="low"
            Text="Resolving build templates for: %(ArchivePackageSpecs.Identity)" />

        <MakeDir
            Condition="!Exists('$(DirBuildDeploy)') AND  '$(ShouldExecute)' == 'true' "
            Directories="$(DirBuildDeploy)" />

        <TemplateText
            Template="%(ArchivePackageSpecs.Identity)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="FileArchiveSpec"
                TaskParameter="Result" />
        </TemplateText>

        <CreateProperty Value="$([System.IO.Path]::GetFileName('$(FileArchiveSpec)'))" >
            <Output
                PropertyName="FileNameArchiveSpec"
                TaskParameter="Value" />
        </CreateProperty>
        <CreateProperty Value="$(DirBuildTemp)\$(FileNameArchiveSpec)" >
            <Output
                PropertyName="FileGeneratedArchiveSpec"
                TaskParameter="Value" />
        </CreateProperty>

        <TemplateFile
            Condition=" '$(ShouldExecute)' == 'true' "
            Encoding="UTF-8"
            OutputFileName="$(FileGeneratedArchiveSpec)"
            Template="$(FileArchiveSpec)"
            Tokens="@(TemplateTokens)" />

        <Zip
            Condition=" '$(ShouldExecute)' == 'true' "
            File="$(FileGeneratedArchiveSpec)"
            OutputDirectory="$(DirBuildDeploy)"
            OverwriteExistingFiles="true" />
    </Target>
 </Project>