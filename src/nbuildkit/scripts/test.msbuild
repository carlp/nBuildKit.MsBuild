<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Test_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <!-- Note the current script is not meant to be imported! -->
        <ExistsTest>true</ExistsTest>

        <!-- The full path to the location of the scripts -->
        <DirNBuildKitMsBuild Condition=" '$(DirNBuildKitMsBuild)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuild>
        <DirNBuildKitMsBuildShared Condition=" '$(DirNBuildKitMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuildShared>
        <DirNBuildKitMsBuildExtensions Condition=" '$(DirNBuildKitMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirNBuildKitMsBuildExtensions>
        <DirNBuildKitMsBuildTemplates Condition=" '$(DirNBuildKitMsBuildTemplates)' == '' ">$(MSBuildProjectDirectory)\templates</DirNBuildKitMsBuildTemplates>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props') AND '$(ExistsSharedImportTestSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props" />

    <!-- Default values for all the properties in case they were not overriden -->
    <PropertyGroup>
        <DefaultPropertyDirectories>
            DirWorkspace=$(DirWorkspace);
            DirUserSettings=$(DirUserSettings);
        </DefaultPropertyDirectories>
        <DefaultProperties>
            NBuildKitVersion=$(NBuildKitVersion)
        </DefaultProperties>
    </PropertyGroup>

    <Target
        DependsOnTargets="_nBuildKit_Test_DisplayInfo"
        Name="nBuildKit_Test_Run">
        <!-- Execute all the test steps in the given order -->
        <CallTarget Targets="_nBuildKit_Test_Execute" />
    </Target>

    <Target
        DependsOnTargets="_nBuildKit_Test_DebugLog"
        Name="_nBuildKit_Test_DisplayInfo">
        <Message
            Importance="normal"
            Text="Testing ..." />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Test_DebugLog">
        <!-- Display the targets that will be executed -->
        <Message
            Condition=" '@(TestStepsToExecute)' != ''"
            Importance="low"
            Text="Executing targets: @(TestStepsToExecute->'%(identity)', '; ')" />
        <Message
            Condition=" '@(TestStepsToExecute)' == ''"
            Importance="low"
            Text="Executing targets: NONE" />

        <Message
            Importance="low"
            Text=" " />

        <!-- Display the known directories -->
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />
    </Target>

    <Target
        Condition="!Exists('$(FileTasksBootstrap)')"
        Name="_nBuildKit_Test_Bootstrap">

        <MSBuild
            BuildInParallel="False"
            Projects="$(DirSrc)\tasks\nBuildKit.MsBuild.Tasks.Bootstrap\nBuildKit.MsBuild.Tasks.Bootstrap.csproj"
            Properties="Configuration=Release;Platform=AnyCPU;OutputPath=$(DirBuildInternal);ShouldRunAnalyzers=false;ShouldPerformCodeAnalysis=false;"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="False"
            TargetAndPropertyListSeparators=""
            Targets="%(MsBuildTasksProjectsToBuild.Targets)"
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="True"
            UseResultsCache="True"
            Condition=" '$(ShouldExecute)' == 'true' ">
        </MSBuild>

        <!--
            The compile process also drops the MsBuild binaries. We don't really want those because they
            may cause DLL loading issues, so we'll nuke em
        -->
        <ItemGroup>
            <BootstrapFilesToDelete Include="$(DirBuildInternal)\Microsoft.Build.*.dll" />
        </ItemGroup>
        <Delete Files="@(BootstrapFilesToDelete)" />
    </Target>

    <UsingTask TaskName="NBuildKit.MsBuild.Tasks.Bootstrap.InvokeSteps" AssemblyFile="$(FileTasksBootstrap)">
    <Target
        Condition=" '@(TestStepsToExecute)' != ''"
        DependsOnTargets="_nBuildKit_Test_Bootstrap"
        Name="_nBuildKit_Test_Execute">

        <CreateItem Include="$(GroupsToExecute.Replace(',', ';').ToLower().Split(';'))">
            <Output
                ItemName="ExecutionGroupsFromUser"
                TaskParameter="Include" />
        </CreateItem>

        <InvokeSteps
            FailureSteps="@(TestFailureStepsToExecute)"
            GroupsToExecute="@(ExecutionGroupsFromUser)"
            PreSteps="@(TestPreStepsToExecute)"
            PostSteps="@(TestPostStepsToExecute)"
            Properties="$(DefaultPropertyDirectories);$(DefaultProperties);$(DefaultPathProperties)"
            Steps="@(TestStepsToExecute)"
            StopOnFirstFailure="true"
            ToolsVersion="$(MSBuildToolsVersion)" />
    </Target>
</Project>
