<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Deploy_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <!-- Note the current script is not meant to be imported! -->
        <ExistsDeploy>true</ExistsDeploy>

        <!-- The full path to the location of the scripts -->
        <DirNBuildKitMsBuild Condition=" '$(DirNBuildKitMsBuild)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuild>
        <DirNBuildKitMsBuildShared Condition=" '$(DirNBuildKitMsBuildShared)' == '' ">$(MSBuildProjectDirectory)</DirNBuildKitMsBuildShared>
        <DirNBuildKitMsBuildExtensions Condition=" '$(DirNBuildKitMsBuildExtensions)' == '' ">$(MSBuildProjectDirectory)\extensions</DirNBuildKitMsBuildExtensions>
        <DirNBuildKitMsBuildTemplates Condition=" '$(DirNBuildKitMsBuildTemplates)' == '' ">$(MSBuildProjectDirectory)\templates</DirNBuildKitMsBuildTemplates>

        <!-- Don't load the template tokens, this script doesn't need them -->
        <LoadTemplateTokens>false</LoadTemplateTokens>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importdeploysharedsettings.props') AND '$(ExistsSharedImportDeploySharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importdeploysharedsettings.props" />

    <!-- Default values for all the properties in case they were not overriden -->
    <PropertyGroup>
        <DefaultPropertyDirectories>
            DirWorkspace=$(DirWorkspace);
            DirUserSettings=$(DirUserSettings);
        </DefaultPropertyDirectories>
        <DefaultProperties>
            NBuildKitVersion=$(NBuildKitVersion)
        </DefaultProperties>
    </PropertyGroup>

    <Target
        DependsOnTargets="_nBuildKit_Deploy_Execute"
        Name="nBuildKit_Deploy_Run">
    </Target>

    <Target
        Condition="!Exists('$(FileNBuildKitExtensionsAssembly)')"
        Name="_nBuildKit_Deploy_Bootstrap">

        <MSBuild
            BuildInParallel="False"
            Projects="$(MSBuildThisFileDirectory)shared.bootstrap.build.tasks.msbuild"
            Properties="$(DefaultPropertyDirectories);$(DefaultProperties);$(DefaultPathProperties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="True"
            TargetAndPropertyListSeparators=""
            Targets=""
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="True"
            UseResultsCache="True">
        </MSBuild>

        <MSBuild
            BuildInParallel="False"
            Projects="$(MSBuildThisFileDirectory)shared.bootstrap.generate.targetsfile.msbuild"
            Properties="$(DefaultPropertyDirectories);$(DefaultProperties);$(DefaultPathProperties)"
            RebaseOutputs="False"
            RemoveProperties=""
            RunEachTargetSeparately="True"
            SkipNonexistentProjects="False"
            StopOnFirstFailure="True"
            TargetAndPropertyListSeparators=""
            Targets=""
            ToolsVersion="$(MSBuildToolsVersion)"
            UnloadProjectsOnCompletion="True"
            UseResultsCache="True">
        </MSBuild>
    </Target>

    <UsingTask TaskName="NBuildKit.MsBuild.Tasks.InvokeSteps" AssemblyFile="$(FileNBuildKitExtensionsAssembly)" />
    <Target
        Condition=" '@(DeployStepsToExecute)' != ''"
        DependsOnTargets="_nBuildKit_Deploy_Bootstrap"
        Name="_nBuildKit_Deploy_Execute">

        <CreateItem Include="$(GroupsToExecute.Replace(',', ';').ToLower().Split(';'))">
            <Output
                ItemName="ExecutionGroupsFromUser"
                TaskParameter="Include" />
        </CreateItem>

        <InvokeSteps
            FailOnPreStepFailure="$(FailDeployOnPreStepFailure)"
            FailOnPostStepFailure="$(FailDeployOnPostStepFailure)"
            FailureSteps="@(DeployFailureStepsToExecute)"
            GroupsToExecute="@(ExecutionGroupsFromUser)"
            PreSteps="@(DeployPreStepsToExecute)"
            PostSteps="@(DeployPostStepsToExecute)"
            Projects="@(DeployStepsToExecute)"
            Properties="$(DefaultPropertyDirectories);$(DefaultProperties);$(DefaultPathProperties)"
            StepMetadata="@(AvailableStepMetadata)"
            StopOnFirstFailure="true"
            StopOnPreStepFailure="$(StopDeployOnPreStepFailure)"
            StopOnPostStepFailure="$(StopDeployOnPostStepFailure)"
            ToolsVersion="$(MSBuildToolsVersion)"
            WorkingDirectory="$(DirWorkspace)" />
    </Target>
</Project>
