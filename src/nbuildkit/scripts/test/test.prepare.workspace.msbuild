<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Test_Prepare_Workspace_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsTestPrepareWorkspace>true</ExistsTestPrepareWorkspace>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props') AND '$(ExistsSharedImportTestSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props" />

    <Target
        Name="nBuildKit_Test_Prepare_Workspace_Run">
        <CallTarget Targets="_nBuildKit_Test_Prepare_Workspace_Clean" />
        <CallTarget Targets="_nBuildKit_Test_Prepare_Workspace_CopyFiles" />
    </Target>

    <!-- Clean -->
    <Target
        Condition=" '$(ShouldClean)' == 'true' '"
        Name="_nBuildKit_Test_Prepare_Workspace_Clean">
        <!--
            We'll try to delete the directory but that may fail randomly because
            some file is being locked (by some other process). This could leads to a failing task, but ..
            the next task is run and then the delete command still executes (delayed
            by the OS).
        -->
        <ItemGroup>
            <TestFilesToDelete Include="$(DirBuildTest)\**\*.*"/>
        </ItemGroup>
        <Delete
            ContinueOnError="True"
            Files="@(TestFilesToDelete)" />

        <ItemGroup>
            <TestDirectoriesToDelete Include="$(DirBuildTest)" />
            <TestDirectoriesToDelete Include="$(DirBuildTemp)" />
        </ItemGroup>
        <RemoveDir
            ContinueOnError="True"
            Directories="@(TestDirectoriesToDelete)" />
    </Target>

    <Target
        Condition=" '@(TestFilesToCopy)' != '' "
        DependsOnTargets="_nBuildKit_Test_Prepare_Workspace_Clean"
        Name="_nBuildKit_Test_Prepare_Workspace_CopyFiles">
        <!--
            MsBuild can't seem to handle using item metadata (BuildFilesToGenerate.FullPath) inside a property function
            inside the Exists() function, so we'll split the process and do the transfer separately.
        -->
        <ItemGroup>
            <DirTestFilesToCopyTemp Include="$([System.IO.Path]::GetDirectoryName('%(TestFilesToCopy.FullPath)'))" />
        </ItemGroup>

        <MakeDir
            Condition="!Exists('%(DirTestFilesToCopyTemp.Identity)')"
            Directories="%(DirTestFilesToCopyTemp.Identity)" />

        <Copy
            SourceFiles="@(TestFilesToCopy)"
            DestinationFiles="@(TestFilesToCopy->'%(TargetDirectory)\%(RecursiveDir)%(Filename)%(Extension)')"
            OverwriteReadOnlyFiles="True"
            Retries="5"
            RetryDelayMilliseconds="1000"
            SkipUnchangedFiles="False"
            UseHardlinksIfPossible="False" />
    </Target>
 </Project>
