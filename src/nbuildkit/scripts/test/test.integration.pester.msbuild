<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Test_Integration_Pester_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsTestPrepareWorkspace>true</ExistsTestPrepareWorkspace>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props') AND '$(ExistsSharedImportTestSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props" />

    <Import
        Condition="Exists('$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild') AND '$(ExistsSharedTemplateTokens)' != 'true' "
        Project="$(DirNBuildKitMsBuild)\shared.templatetokens.msbuild" />

    <Import
        Condition="Exists('$(FileNBuildKitExtensionsImport)') AND '$(ExistsNBuildKitExtensions)' != 'true' "
        Project="$(FileNBuildKitExtensionsImport)" />

    <Target
        DependsOnTargets="_nBuildKit_Test_Integration_Pester_DisplayInfo"
        Name="nBuildKit_Test_Integration_Pester_Run">
        <CallTarget Targets="nBuildKit_Test_Integration_Pester_Run" />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Test_Integration_Pester_DebugLog">
        <Message
            Importance="low"
            Text="Configuration values:" />
        <Message
            Importance="low"
            Text="ShouldClean:             $(ShouldClean)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the build output is located at:           $(DirBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the deliverables is located at:           $(DirBuildDeploy)" />
        <Message
            Importance="low"
            Text="The directory containing the build logs is located at:             $(DirBuildLogs)" />
        <Message
            Importance="low"
            Text="The directory containing the temporary build files is located at:  $(DirBuildTemp)" />
        <Message
            Importance="low"
            Text="The directory containing the test files is located at:             $(DirTestLocal)" />
        <Message
            Importance="low"
            Text="The directory containing the NuGet packages is located at:         $(DirPackages)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
    </Target>

    <!-- Display info -->
    <Target
        DependsOnTargets="_nBuildKit_Test_Integration_Pester_DebugLog"
        Name="_nBuildKit_Test_Integration_Pester_DisplayInfo">
        <Message
            Importance="normal"
            Text="Executing pester tests ..." />
    </Target>

    <Target Name="_nBuildKit_Test_Integration_Pester_GetToolPaths">
        <NuGetInstall
            Condition=" '$(ToolsExternalPesterPath)' == 'UNDEFINED' AND   '$(ShouldExecute)' == 'true' "
            NuGetExecutablePath="$(ToolsExternalNuGetPath)"
            PackageDirectory="$(DirPackages)"
            PackageName="Pester"
            PackageVersion="$(ToolsExternalPesterVersion)"
            Sources="@(NuGetSources)" />
        <SearchPackagesDirectoryForToolDirectory
            Condition=" '$(ToolsExternalPesterPath)' == 'UNDEFINED' AND  '$(ShouldExecute)' == 'true' "
            FileToLocate="Pester.psm1"
            PackagesDirectory="$(DirPackages)">
            <Output
                PropertyName="ToolsExternalPesterPath"
                TaskParameter="Path" />
        </SearchPackagesDirectoryForToolDirectory>
        <Message
            Condition="Exists('$(ToolsExternalPesterPath)') AND '$(ShouldExecute)' == 'true' "
            Text="The Pester module was found at: $(ToolsExternalPesterPath)" />
        <Error
            Condition="!Exists('$(ToolsExternalPesterPath)') AND '$(ShouldExecute)' == 'true' "
            Text="Could not locate the Pester module path. Cannot execute pester tests." />
    </Target>

    <Target
        DependsOnTargets="nBuildKit_Shared_TemplateTokens_Initialize"
        Name="_nBuildKit_Test_Integration_Pester_ExpandTemplates"
        Outputs="%(PesterTestArguments.Identity)">

        <TemplateText
            Condition=" '%(PesterTestArguments.Value)' != '' AND '$(ShouldExecute)' == 'true' "
            Template="%(PesterTestArguments.Value)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="PesterTestArgumentValueExpanded"
                TaskParameter="Result" />
        </TemplateText>

        <CreateItem
            AdditionalMetadata="Value=$(PesterTestArgumentValueExpanded)"
            Condition=" '%(PesterTestArguments.Identity)' != '' "
            Include="%(PesterTestArguments.Identity)">
            <Output
                ItemName="PesterTestArgumentsExpanded"
                TaskParameter="Include" />
        </CreateItem>
    </Target>

    <Target
        DependsOnTargets="_nBuildKit_Test_Integration_Pester_GetToolPaths;_nBuildKit_Test_Integration_Pester_ExpandTemplates"
        Name="nBuildKit_Test_Integration_Pester_Run">

        <TemplateText
            Template="$(FileTestReport)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="FileReportPesterXmlExpanded"
                TaskParameter="Result" />
        </TemplateText>

        <InvokePesterOnFile
            IgnoreErrors="false"
            PesterModulePath="$(ToolsExternalPesterPath)"
            PowershellExePath="$(ToolsExternalPowershellPath)"
            ReportFile="$(FileReportPesterXmlExpanded)"
            TemporaryDirectory="$(DirBuildTemp)"
            TestArguments="@(PesterTestArgumentsExpanded)"
            TestFile="$(ScriptTest)" />
    </Target>
 </Project>