<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Shared_Prepare_VcsSetBranch_Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <ExistsSharedPrepareVcsSetBranch>true</ExistsSharedPrepareVcsSetBranch>
    </PropertyGroup>

    <Import
        Condition="Exists('$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props') AND '$(ExistsSharedImportSharedSettings)' != 'true' "
        Project="$(DirNBuildKitMsBuildShared)\shared.importsharedsettings.props" />

    <Import
        Condition="Exists('$(FileNBuildKitExtensionsImport)') AND '$(ExistsNBuildKitExtensions)' != 'true' "
        Project="$(FileNBuildKitExtensionsImport)" />

    <Target
        Condition="!Exists('$(FileVcsInfo)')"
        DependsOnTargets="_nBuildKit_Shared_Prepare_VcsSetBranch_DisplayInfo"
        Name="nBuildKit_Shared_Prepare_VcsSetBranch_Run">
        <CallTarget Targets="_nBuildKit_Shared_Prepare_VcsSetBranch_EnsureCorrectGitBranch" />
    </Target>

    <!-- Display info -->
    <Target
        DependsOnTargets="_nBuildKit_Shared_Prepare_VcsSetBranch_DebugLog"
        Name="_nBuildKit_Shared_Prepare_VcsSetBranch_DisplayInfo">
        <Message
            Importance="normal"
            Text="Ensuring that the build is executed on the correct branch ..." />
        <Message
            Importance="normal"
            Text="Expected branch: $(GitBranchExpected)" />
        <Message
            Importance="normal"
            Text="Expected revision: $(GitRevNoExpected)" />
    </Target>

    <Target
        Condition="$(ShouldDisplayDebugLog)"
        Name="_nBuildKit_Shared_Prepare_VcsSetBranch_DebugLog">
        <Message
            Importance="low"
            Text="Project directory structure:" />
        <Message
            Importance="low"
            Text="The workspace is located at:                                       $(DirWorkspace)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit files is located at:        $(DirNBuildKitMsBuild)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit scripts is located at:      $(DirNBuildKitMsBuildExtensions)" />
        <Message
            Importance="low"
            Text="The directory containing the nBuildKit templates is located at:    $(DirNBuildKitMsBuildTemplates)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="The VCS info file is located at:                                   $(FileVcsInfo)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Importance="low"
            Text="GIT command line executable is located at:                         $(ToolsExternalGitPath)" />
        <Message
            Importance="low"
            Text=" " />

        <Message
            Condition=" '$(IsGitWorkspace)' == 'true' "
            Importance="low"
            Text="The current workspace is a GIT workspace" />
        <Warning
            Condition=" '$(IsGitWorkspace)' != 'true' "
            Text="The current workspace does not have any identifying VCS information. No VCS info file will be created" />
        <Message
            Importance="low"
            Text=" " />
    </Target>

    <Target
        Condition=" '$(IsGitWorkspace)' == 'True' AND '$(IsOnBuildServer)' == 'True' "
        Name="_nBuildKit_Shared_Prepare_VcsSetBranch_EnsureCorrectGitBranch">
        <Error
            Condition=" '$(ToolsExternalGitPath)' == '' AND '$(ShouldExecute)' == 'true' "
            Text="No GIT executable defined. Will not be able to gather the VCS information." />

        <GitCurrentBranch
            Condition=" '$(ShouldExecute)' == 'true' "
            GitExecutablePath="$(ToolsExternalGitPath)"
            Workspace="$(DirWorkspace)">
            <Output
                PropertyName="CurrentGitBranch"
                TaskParameter="CurrentBranch" />
        </GitCurrentBranch>
        <Message Text="Current branch: $(CurrentGitBranch)" />

        <Message
            Condition=" '$(CurrentGitBranch)' != '$(GitBranchExpected)' "
            Text="Not on expected branch, resetting ..." />
        <GitCheckout
            Branch="$(GitBranchExpected)"
            Condition=" '$(CurrentGitBranch)' != '$(GitBranchExpected)' "
            GitExecutablePath="$(ToolsExternalGitPath)"
            Workspace="$(DirWorkspace)" />

        <GitCurrentRevision
            Condition=" '$(ShouldExecute)' == 'true' "
            GitExecutablePath="$(ToolsExternalGitPath)"
            Workspace="$(DirWorkspace)">
            <Output
                PropertyName="GitRevNoCurrentBranch"
                TaskParameter="CurrentRevision" />
        </GitCurrentRevision>
        <Message Text="Current revision: $(GitRevNoCurrentBranch)" />

        <Message
            Condition=" '$(GitRevNoCurrentBranch)' != '$(GitRevNoExpected)' "
            Text="Not at expected revision, resetting ..." />
        <GitReset
            Commit="$(GitRevNoExpected)"
            Condition=" '$(GitRevNoCurrentBranch)' != '$(GitRevNoExpected)' "
            GitExecutablePath="$(ToolsExternalGitPath)"
            Workspace="$(DirWorkspace)" />
    </Target>
 </Project>
