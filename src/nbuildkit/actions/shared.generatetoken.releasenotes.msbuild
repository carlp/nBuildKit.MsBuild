<?xml version="1.0" encoding="utf-8"?>
<Project
    ToolsVersion="14.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedGenerateTokenReleaseNotes>true</ExistsSharedGenerateTokenReleaseNotes>
    </PropertyGroup>

    <PropertyGroup>
        <FileTemplateTokensReleaseNotes>$(DirGeneratedPropertiesFiles)\templatetokens.releasenotes.props</FileTemplateTokensReleaseNotes>
    </PropertyGroup>
    <Target
        Inputs="$(FileReleaseNotes)"
        Name="shared_generatetoken_releasenotes"
        Outputs="$(FileTemplateTokensReleaseNotes)">
        <CallTarget Targets="shared_generatetoken_releasenotes_writepropertyfile" />
    </Target>

    <!--
        Always execute this target because we need to have the release note templates generated with
        empty entries if they don't exist. That way the user can always include the release notes
        even if there aren't any. If we don't specify them some tools have a bad day (e.g. nuget).
    -->
    <Target
        Name="shared_generatetoken_releasenotes_writepropertyfile">
        <CreateProperty
            Condition="Exists('$(FileReleaseNotes)') "
            Value="$([System.IO.File]::ReadAllText('$(FileReleaseNotes)'))">
            <Output
                PropertyName="ReleaseNotes"
                TaskParameter="Value" />
        </CreateProperty>
        <HtmlEncodeText
            Condition=" '$(ReleaseNotes)' != '' "
            Text="$(ReleaseNotes)">
            <Output
                PropertyName="ReleaseNotesHtmlEncoded"
                TaskParameter="EncodedText" />
        </HtmlEncodeText>

        <ItemGroup>
            <TemplateTokensReleaseNotes Include="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;" />
            <TemplateTokensReleaseNotes Include="&lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot; &gt;" />
            <TemplateTokensReleaseNotes Include="&lt;PropertyGroup&gt;" />
            <TemplateTokensReleaseNotes Include="&lt;ExistsGeneratedTemplateTokensReleaseNotes&gt;true&lt;/ExistsGeneratedTemplateTokensReleaseNotes&gt;" />
            <TemplateTokensReleaseNotes Include="&lt;/PropertyGroup&gt;" />
            <TemplateTokensReleaseNotes Include="&lt;ItemGroup&gt;" />

            <!--
                Define empty entries for the release notes in case there are none so that we can
                still reference the template variable.
            -->
            <TemplateTokensReleaseNotes
                Condition=" '$(ReleaseNotes)' != '' "
                Include="&lt;TemplateTokens Include=&quot;ReleaseNotes&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;$(ReleaseNotes)&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />
            <TemplateTokensReleaseNotes
                Condition=" '$(ReleaseNotes)' == '' "
                Include="&lt;TemplateTokens Include=&quot;ReleaseNotes&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />

            <TemplateTokensReleaseNotes
                Condition=" '$(ReleaseNotesHtmlEncoded)' != '' "
                Include="&lt;TemplateTokens Include=&quot;ReleaseNotesHtmlEncoded&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;$(ReleaseNotesHtmlEncoded)&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />
            <TemplateTokensReleaseNotes
                Condition=" '$(ReleaseNotesHtmlEncoded)' == '' "
                Include="&lt;TemplateTokens Include=&quot;ReleaseNotesHtmlEncoded&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />


            <TemplateTokensReleaseNotes Include="&lt;/ItemGroup&gt;" />
            <TemplateTokensReleaseNotes Include="&lt;/Project&gt;" />
        </ItemGroup>

        <CreateProperty
            Value="$([System.IO.Path]::GetDirectoryName('$(FileTemplateTokensReleaseNotes)'))">
            <Output
                PropertyName="DirToCreate"
                TaskParameter="Value" />
        </CreateProperty>
        <MakeDir
            Condition="!Exists('$(DirToCreate)')"
            Directories="$(DirToCreate)" />
        <WriteLinesToFile
            File="$(FileTemplateTokensReleaseNotes)"
            Lines="@(TemplateTokensReleaseNotes)"
            Overwrite="true" />
    </Target>
</Project>
