<?xml version="1.0" encoding="utf-8"?>
<Project
    ToolsVersion="14.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsSharedGenerateTokenVcsInfo>true</ExistsSharedGenerateTokenVcsInfo>
    </PropertyGroup>

    <PropertyGroup>
        <FileTemplateTokensVcsInfo>$(DirGeneratedPropertiesFiles)\templatetokens.vcsinfo.props</FileTemplateTokensVcsInfo>
    </PropertyGroup>
    <Target
        Inputs="$(FileVcsInfo)"
        Name="shared_generatetoken_vcsinfo"
        Outputs="$(FileTemplateTokensVcsInfo)">
        <CallTarget Targets="shared_generatetoken_vcsinfo_writepropertyfile" />
    </Target>

    <Target
        Condition="Exists('$(FileVcsInfo)')"
        Name="shared_generatetoken_vcsinfo_writepropertyfile">
        <GetVcsInfoFromFile
            Condition="Exists('$(FileVcsInfo)')"
            ErrorInformation="@(ErrorInformation)"
            InfoFile="$(FileVcsInfo)">
            <Output
                PropertyName="VcsRevision"
                TaskParameter="Revision" />
            <Output
                PropertyName="VcsBranch"
                TaskParameter="Branch" />
        </GetVcsInfoFromFile>

        <PropertyGroup>
            <GenerationTime>$([System.DateTime]::Now.ToString("o"))</GenerationTime>
        </PropertyGroup>
        <ItemGroup>
            <TemplateTokensVcsInfo Include="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;" />
            <TemplateTokensVcsInfo Include="&lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot; &gt;" />
            <TemplateTokensVcsInfo Include='&lt;!-- Generated at $(GenerationTime) --&gt;' />
            <TemplateTokensVcsInfo Include="&lt;PropertyGroup&gt;" />
            <TemplateTokensVcsInfo Include="&lt;ExistsGeneratedTemplateTokensVcsInfo&gt;true&lt;/ExistsGeneratedTemplateTokensVcsInfo&gt;" />
            <TemplateTokensVcsInfo Include="&lt;/PropertyGroup&gt;" />
            <TemplateTokensVcsInfo Include="&lt;ItemGroup&gt;" />

            <TemplateTokensVcsInfo Include="&lt;TemplateTokens Include=&quot;VcsRevision&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;$(VcsRevision)&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />
            <TemplateTokensVcsInfo Include="&lt;TemplateTokens Include=&quot;VcsBranch&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;$(VcsBranch)&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />
            <TemplateTokensVcsInfo Include="&lt;TemplateTokens Include=&quot;VcsGitRemoteRepository&quot; &gt; &#xD;&#xA; &lt;ReplacementValue&gt;$(VcsGitRemoteRepository)&lt;/ReplacementValue&gt; &#xD;&#xA; &lt;/TemplateTokens&gt;" />

            <TemplateTokensVcsInfo Include="&lt;/ItemGroup&gt;" />
            <TemplateTokensVcsInfo Include="&lt;/Project&gt;" />
        </ItemGroup>

        <CreateProperty
            Value="$([System.IO.Path]::GetDirectoryName('$(FileTemplateTokensVcsInfo)'))">
            <Output
                PropertyName="DirToCreate"
                TaskParameter="Value" />
        </CreateProperty>
        <MakeDir
            Condition="!Exists('$(DirToCreate)')"
            Directories="$(DirToCreate)" />
        <WriteLinesToFile
            File="$(FileTemplateTokensVcsInfo)"
            Lines="@(TemplateTokensVcsInfo)"
            Overwrite="true" />
    </Target>
</Project>
