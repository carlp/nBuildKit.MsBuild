<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Shared_Prepare_Copy_FromArchive"
    ToolsVersion="14.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <ExistsSharedPrepareCopyArchive>true</ExistsSharedPrepareCopyArchive>
    </PropertyGroup>
    <PropertyGroup>
        <ShouldLoadArchiveFilesToCopy>true</ShouldLoadArchiveFilesToCopy>
        <ShouldLoadGpgKeyServers>true</ShouldLoadGpgKeyServers>
        <ShouldLoadTemplateTokens>true</ShouldLoadTemplateTokens>
        <ShouldLoadTemplateVersion>true</ShouldLoadTemplateVersion>
        <ShouldLoadSystemTemplateVersion>true</ShouldLoadSystemTemplateVersion>
    </PropertyGroup>

    <Import
        Condition="Exists('$(FileImports)') AND '$(ExistsFileImports)' != 'true' "
        Project="$(FileImports)" />

    <Target
        Condition=" '@(ArchiveFilesToCopy)' != '' "
        Name="nBuildKit_Shared_Prepare_Copy_FromArchive"
        Outputs="%(ArchiveFilesToCopy.Destination)">

        <TemplateText
            Condition=" '%(ArchiveFilesToCopy.FullPath)' != '' "
            ErrorInformation="@(ErrorInformation)"
            Template="%(ArchiveFilesToCopy.FullPath)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="ArchiveFileToCopy"
                TaskParameter="Result" />
        </TemplateText>

        <TemplateText
            Condition=" '%(ArchiveFilesToCopy.Destination)' != '' "
            ErrorInformation="@(ErrorInformation)"
            Template="%(ArchiveFilesToCopy.Destination)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="DestinationPath"
                TaskParameter="Result" />
        </TemplateText>

        <CallTarget
            Condition=" '%(ArchiveFilesToCopy.HashFile)' != '' AND '%(ArchiveFilesToCopy.SignatureFile)' != '' "
            Targets="_nBuildKit_Shared_Prepare_Copy_FromArchive_GetToolPaths" />
        <ValidateGpgSignature
            Condition=" '%(ArchiveFilesToCopy.HashFile)' != '' AND '%(ArchiveFilesToCopy.SignatureFile)' != '' "
            GpgExecutablePath="$(ToolsExternalGpgPath)"
            GpgKey="%(ArchiveFilesToCopy.GpgKey)"
            KeyServers="@(GpgKeyServers)"
            Path="%(ArchiveFilesToCopy.HashFile)"
            SignatureFile="%(ArchiveFilesToCopy.SignatureFile)" />

        <ValidateHash
            Algorithm="%(ArchiveFilesToCopy.HashAlgorithm)"
            Condition=" '%(ArchiveFilesToCopy.Hash)' != '' OR '%(ArchiveFilesToCopy.HashFile)' != '' "
            Hash="%(ArchiveFilesToCopy.Hash)"
            HashFile="%(ArchiveFilesToCopy.HashFile)"
            Path="%(ArchiveFilesToCopy.FullPath)" />

        <Unzip
            DestinationDirectory="$(DestinationPath)"
            ErrorInformation="@(ErrorInformation)"
            InputFileName="$(ArchiveFileToCopy)" />
    </Target>

    <Target
        Name="_nBuildKit_Shared_Prepare_Copy_FromArchive_GetToolPaths">
        <NuGetInstall
            Condition=" '$(ToolsExternalGpgPath)' == 'UNDEFINED' "
            ErrorInformation="@(ErrorInformation)"
            ExcludeVersion="$(ShouldRestoreNuGetPackagesWithoutVersionInPath)"
            NuGetExecutablePath="$(ToolsExternalNuGetPath)"
            PackagesDirectory="$(DirPackages)"
            PackageName="Gpg.Windows.x64"
            PackageVersion="$(ToolsExternalGpgVersion)"
            Sources="@(NuGetSources)"
            WorkingDirectory="$(DirWorkspace)" />
        <SearchPackagesDirectoryForToolPath
            Condition=" '$(ToolsExternalGpgPath)' == 'UNDEFINED' "
            ErrorInformation="@(ErrorInformation)"
            FileToLocate="gpg.exe"
            PackagesDirectory="$(DirPackages)">
            <Output
                PropertyName="ToolsExternalGpgPath"
                TaskParameter="Path" />
        </SearchPackagesDirectoryForToolPath>
        <GetToolFullPath
            Condition=" '$(ToolsExternalGpgPath)' != 'UNDEFINED' "
            ErrorInformation="@(ErrorInformation)"
            Tool="$(ToolsExternalGpgPath)">
            <Output
                PropertyName="ToolsExternalGpgPath"
                TaskParameter="Path" />
        </GetToolFullPath>
        <Message
            Condition="Exists('$(ToolsExternalGpgPath)') "
            Importance="low"
            Text="The GPG executable was found at: $(ToolsExternalGpgPath)" />

        <Error
            Code="$(NBuildKitErrorCodeToolFileNotFound)"
            Condition="!Exists('$(ToolsExternalGpgPath)') "
            HelpKeyword="$(NBuildKitErrorIdToolFileNotFound)"
            Text="Could not locate the GPG executable path. Cannot verify signatures." />
    </Target>
 </Project>
