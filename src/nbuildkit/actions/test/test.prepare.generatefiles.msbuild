<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="nBuildKit_Test_Prepare_GenerateFiles_Run"
    ToolsVersion="14.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <!-- Defines whether the current script file has been loaded / imported or not -->
        <ExistsBuildPrepareGenerateFiles>true</ExistsBuildPrepareGenerateFiles>
    </PropertyGroup>
    <PropertyGroup>
        <ShouldLoadTestFilesToGenerate>true</ShouldLoadTestFilesToGenerate>
    </PropertyGroup>

    <Import
        Condition="Exists('$(FileImports)') AND '$(ExistsFileImports)' != 'true' "
        Project="$(FileImports)" />

    <Target
        Condition=" '@(TestFilesToGenerate)' != '' "
        Name="nBuildKit_Test_Prepare_GenerateFiles_Run"
        Outputs="%(TestFilesToGenerate.Identity)">
        <CallTarget Targets="_nBuildKit_Test_Prepare_GenerateFiles_GenerateFiles" />
    </Target>

    <!-- Generate the required files -->
    <Target
        Condition=" '@(TestFilesToGenerate)' != '' "
        Name="_nBuildKit_Test_Prepare_GenerateFiles_GenerateFiles"
        Outputs="%(TestFilesToGenerate.Identity)">
        <Message
            Importance="normal"
            Text="Generating file %(TestFilesToGenerate.Identity)" />

        <!--
            MsBuild can't seem to handle using item metadata (TestFilesToGenerate.FullPath) inside a property function
            inside the Exists() function, so we'll split the process and do the transfer separately.
        -->
        <ItemGroup>
            <DirTestFilesToGenerateTemp Include="$([System.IO.Path]::GetDirectoryName('%(TestFilesToGenerate.FullPath)'))" />
        </ItemGroup>

        <MakeDir
            Condition="!Exists('%(DirTestFilesToGenerateTemp.Identity)')"
            Directories="%(DirTestFilesToGenerateTemp.Identity)" />

        <!--
            It seems MsBuild can't handle batched metadata in conditions either, so make a property and then use that.
        -->
        <CreateProperty Value="%(TestFilesToGenerate.Token)">
            <Output
                PropertyName="AdditionalToken"
                TaskParameter="Value" />
        </CreateProperty>
        <ItemGroup Condition=" '$(AdditionalToken)' != '' ">
            <TemplateTokens Include="%(TestFilesToGenerate.Token)">
                <ReplacementValue>%(TestFilesToGenerate.ReplacementValue)</ReplacementValue>
            </TemplateTokens>
        </ItemGroup>

        <TemplateFile
            Condition="!Exists('%(TestFilesToGenerate.FullPath)')"
            Encoding="%(TestFilesToGenerate.Encoding)"
            ErrorInformation="@(ErrorInformation)"
            OutputFileName="%(TestFilesToGenerate.Identity)"
            SearchExpression="%(TestFilesToGenerate.Expression)"
            Template="%(TestFilesToGenerate.Template)"
            Tokens="@(TemplateTokens)" />
    </Target>
 </Project>
