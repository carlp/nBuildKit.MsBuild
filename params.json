{"name":"Nbuildkit","tagline":"nBuildKit is a collection of tools and scripts that provide an easy way to set-up a complete build and deployment for a (.NET) project.","body":"# nBuildKit\r\n\r\nnBuildKit is a collection of tools and scripts that provide an easy way to set-up a complete build and deployment for a (.NET) project.\r\n\r\n## Continuous integration & deployment\r\nnBuildKit uses [AppVeyor](http://www.appveyor.com) for the continuous integration and deployment processes.\r\n\r\n* __Build:__ [![Build status](https://ci.appveyor.com/api/projects/status/yqpaush2xajbyn74)](https://ci.appveyor.com/project/pvandervelde/nbuildkit)\r\n\r\n* __Deployment status:__ [![Build status](https://ci.appveyor.com/api/projects/status/jcp6k51ntktugenm)](https://ci.appveyor.com/project/pvandervelde/nbuildkit-244)\r\n\r\n## Set up\r\n\r\nCurrently the only version available provides MsBuild scripts that run the build. In order to use this version take the following steps.\r\n\r\n* Import the NuGet package as part of the project. Note that it does not need to be imported by a .NET project file as it does not add anything to the projects. Having a packages.config file at the root directory of the repository with the import line for `nBuildKit.MsBuild` will work fine.\r\n* From the [releases page](https://github.com/pvandervelde/nBuildKit/releases) download the latest `nbuildkit.msbuild.samples.zip` archive.\r\n* Extract the `settings.props`, `build.msbuild` and `deploy.msbuild` from the ZIP archive and place them in the root directory of the repository.\r\n* Update the `settings.props` file so that it matches your repository and environment.\r\n* Execute a build.\r\n\r\n## Installation instructions\r\n\r\nThe MsBuild libraries are available on [NuGet.org](nuget.org). The ZIP archive containing the sample scripts can be found on the [releases page](https://github.com/pvandervelde/nBuildKit/releases).\r\n\r\n## How to build\r\n\r\nTo build the project invoke MsBuild on the `build.msbuild` script in the repository root directory. This will package the scripts and create the NuGet packages and ZIP archives. Final artifacts will be placed in the `build\\deploy` directory.\r\n\r\nThe build script assumes that:\r\n\r\n* The connection to the repository is available so that the version number can be obtained via [GitHubFlowVersion](https://github.com/JakeGinnivan/GitHubFlowVersion).\r\n* The NuGet command line executable is available from the PATH","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}